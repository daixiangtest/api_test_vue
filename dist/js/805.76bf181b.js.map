{"version":3,"file":"js/805.76bf181b.js","mappings":"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","sources":["webpack://api_test_vue/./node_modules/vue-loader/dist/exportHelper.js","webpack://api_test_vue/./src/store/modoles/proStore.js","webpack://api_test_vue/./src/utils/dateTools.js","webpack://api_test_vue/./src/views/home/testPlan/TestPlanView.vue","webpack://api_test_vue/./src/views/home/testPlan/TestPlanView.vue?4f63"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// runtime helper for setting properties on components\n// in a tree-shakable way\nexports.default = (sfc, props) => {\n    const target = sfc.__vccOpts || sfc;\n    for (const [key, val] of props) {\n        target[key] = val;\n    }\n    return target;\n};\n","import {defineStore} from 'pinia'\r\nimport api from '@/api/index'\r\n\r\nexport const ProjectStore=defineStore('proStore',\r\n    {   \r\n        // 全局数据存储\r\n        state: () => {\r\n            return {\r\n                // 项目信息\r\n                pro:{},\r\n                // 环境列表\r\n                env_list:[],\r\n                // 选择的测试环境\r\n                env:0,\r\n                // 保存接口列表\r\n                inetrfaces:[],\r\n                // 测试业务流列表\r\n                sceneList:[],\r\n                // 测试计划列表\r\n                taskList: []\r\n            }\r\n\r\n        },\r\n        getters:{\r\n            // 过滤出项目接口\r\n            interface1(){\r\n                return this.inetrfaces.filter((item) => {\r\n                    return item.type==='1'\r\n                })\r\n            },\r\n            // 过滤出第三方接口\r\n            interface2(){\r\n                return this.inetrfaces.filter((item) => {\r\n                    return item.type==='2'\r\n                })\r\n            }\r\n        },\r\n        // 定义全局的方法\r\n        actions:{\r\n            // 获取接口列表\r\n            async getInterFaces(){\r\n                const res=await api.getInterFaces(this.pro.id)\r\n                if (res.status===200){\r\n                    this.inetrfaces=res.data\r\n                }else{\r\n                    console.log(`获取项目id${this.pro.id}失败`)\r\n                }\r\n            },\r\n            // 获取测试业务流列表\r\n            async getScenes(){\r\n                const res=await api.getScenes(this.pro.id)\r\n                if (res.status===200){\r\n                    this.sceneList=res.data\r\n                }\r\n            },\r\n            // 获取测试计划\r\n            async getTestTask(){\r\n                const res=await api.getTestTaskList(this.pro.id)\r\n                if (res.status===200){\r\n                    this.taskList=res.data\r\n                }\r\n            }\r\n        },\r\n        persist: {\r\n            enabled:true,\r\n            strategies:{\r\n                key:\"users\",\r\n                storage:localStorage\r\n            }\r\n        }\r\n    },\r\n    \r\n  \r\n)","import { ref } from \"vue\";\r\n\r\nfunction dateFtt(fmt, date) { //author: meizz \r\n\tvar o = {\r\n\t\t\"M+\": date.getMonth() + 1, //月份 \r\n\t\t\"d+\": date.getDate(), //日 \r\n\t\t\"h+\": date.getHours(), //小时 \r\n\t\t\"m+\": date.getMinutes(), //分 \r\n\t\t\"s+\": date.getSeconds(), //秒 \r\n\t\t\"q+\": Math.floor((date.getMonth() + 3) / 3), //季度 \r\n\t\t\"S\": date.getMilliseconds() //毫秒 \r\n\t};\r\n\tif (/(y+)/.test(fmt))\r\n\t\tfmt = fmt.replace(RegExp.$1, (date.getFullYear() + \"\").substr(4 - RegExp.$1.length));\r\n\tfor (var k in o)\r\n\t\tif (new RegExp(\"(\" + k + \")\").test(fmt))\r\n\t\t\tfmt = fmt.replace(RegExp.$1, (RegExp.$1.length == 1) ? (o[k]) : ((\"00\" + o[k]).substr((\"\" + o[k]).length)));\r\n\treturn fmt;\r\n}\r\n\r\nexport const useTime = () => {\r\n\tconst year = ref(0); // 年份\r\n\tconst month = ref(0); // 月份\r\n\tconst week = ref(\"\"); // 星期几\r\n\tconst day = ref(0); // 天数\r\n\tconst hour = ref(0); // 小时\r\n\tconst minute = ref(0); // 分钟\r\n\tconst second = ref(0); // 秒\r\n\tconst nowTime = ref(\"\"); // 当前时间\r\n\t// 更新时间\r\n\tconst updateTime = () => {\r\n\t\tconst date = new Date();\r\n\t\tyear.value = date.getFullYear();\r\n\t\tmonth.value = date.getMonth() + 1;\r\n\t\tweek.value = \"日一二三四五六\".charAt(date.getDay());\r\n\t\tday.value = date.getDate();\r\n\t\thour.value =\r\n\t\t\t(date.getHours() + \"\")?.padStart(2, \"0\") ||\r\n\t\t\tnew Intl.NumberFormat(undefined, { minimumIntegerDigits: 2 }).format(date.getHours());\r\n\t\tminute.value =\r\n\t\t\t(date.getMinutes() + \"\")?.padStart(2, \"0\") ||\r\n\t\t\tnew Intl.NumberFormat(undefined, { minimumIntegerDigits: 2 }).format(date.getMinutes());\r\n\t\tsecond.value =\r\n\t\t\t(date.getSeconds() + \"\")?.padStart(2, \"0\") ||\r\n\t\t\tnew Intl.NumberFormat(undefined, { minimumIntegerDigits: 2 }).format(date.getSeconds());\r\n\t\tnowTime.value =\r\n\t\t\t`${year.value}年${month.value}月${day.value} ${hour.value}:${minute.value}:${second.value}`;\r\n\t};\r\n\r\n\tupdateTime();\r\n\r\n\treturn { year, month, day, hour, minute, second, week, nowTime };\r\n}\r\n\r\n\r\nexport default {\r\n\t// 格式化日期时间\r\n\trTime(date) {\r\n\t\treturn dateFtt('yyyy-MM-dd hh:mm:ss', new Date(date))\r\n\t},\r\n\t// 格式化日期\r\n\trDate(date) {\r\n\t\treturn dateFtt('yyyy-MM-dd', new Date(date))\r\n\t},\r\n\trhost(date) {\r\n\t\treturn dateFtt('yyyy-MM-dd hh:mm', new Date(date))\r\n\t},\r\n\r\n\r\n}","<template>\r\n    <!-- 测试执行计划（测试任务） -->\r\n    <div class=\"main_box\">\r\n\t\t<div class=\"card left_box\">\r\n\t\t\t<!-- 顶部标题 -->\r\n\t\t\t<div class=\"title_box\">\r\n\t\t\t\t<img src=\"@/assets/icons/repair.png\" width=\"25\">\r\n\t\t\t\t<div class=\"name\">测试计划</div>\r\n\t\t\t\t<el-button @click='addTask' size=\"small\" icon='CirclePlus' plain>添加</el-button>\r\n\t\t\t</div>\r\n\t\t\t<!-- 计划列表 -->\r\n\t\t\t<el-menu :default-active=\"activaTask.id.toString()\" v-if='pstore.taskList.length>0'>\r\n\t\t\t\t<el-menu-item @click='selectTask(item)' :index=\"item.id.toString()\" v-for='item in pstore.taskList'\r\n\t\t\t\t\tkey=\"item.id\">\r\n\t\t\t\t\t<img src=\"@/assets/icons/repair.png\" width=\"20\" style=\"margin-right: 10px;\">\r\n\t\t\t\t\t<span>{{item.name}}</span>\r\n\t\t\t\t</el-menu-item>\r\n\t\t\t</el-menu>\r\n\t\t</div>\r\n\t\t<div class=\"card right_box\">\r\n\t\t\t<!-- 测试任务基本信息 -->\r\n\t\t\t<div class='card'>\r\n\t\t\t\t<!-- 右侧内容 -->\r\n\t\t\t\t<el-divider content-position=\"left\"><b>基本信息</b></el-divider>\r\n\t\t\t\t<el-row :gutter=\"5\" style=\"margin-bottom: 20px;\" v-if=\"activaTask\">\r\n\t\t\t\t\t<el-col :span=\"16\">\r\n\t\t\t\t\t\t<el-input v-model=\"activaTask.name\" size=\"small\">\r\n\t\t\t\t\t\t\t<template #prepend>\r\n\t\t\t\t\t\t\t\t业务流名称\r\n\t\t\t\t\t\t\t</template>\r\n\t\t\t\t\t\t\t<template #append>\r\n\t\t\t\t\t\t\t\t<el-button @click=\"saveTask\" plain  icon=\"CircleCheck\" size=\"small\"\r\n\t\t\t\t\t\t\t\t\ttype=\"primary\">保存</el-button>\r\n\t\t\t\t\t\t\t</template>\r\n\t\t\t\t\t\t</el-input>\r\n\t\t\t\t\t</el-col>\r\n\t\t\t\t\t<el-col :span=\"8\" style=\"text-align: right;\">\r\n\t\t\t\t\t\t<el-button @click=\"runTask\" plain size=\"small\" type=\"primary\"\r\n\t\t\t\t\t\t\ticon=\"el-icon-s-promotion\">运行</el-button>\r\n\t\t\t\t\t\t<el-button @click=\"delTask\" plain icon=\"Delete\" size=\"small\" type=\"danger\">删除</el-button>\r\n\t\t\t\t\t</el-col>\r\n\t\t\t\t</el-row>\r\n\t\t\t</div>\r\n\t\t\t<!-- 测试任务中的业务流 -->\r\n\t\t\t<div class='card' style='margin-top:10px'>\r\n\t\t\t\t<el-divider content-position=\"left\"><b>本计划执行的业务流</b></el-divider>\r\n\t\t\t\t<el-table :data=\"scene\" row-key=\"id\" style=\"width: 100%;margin-bottom: 10px;\" :show-header=\"false\">\r\n\t\t\t\t\t<el-table-column>\r\n\t\t\t\t\t\t<template #default=\"scope\">\r\n\t\t\t\t\t\t\t<span class=\"el-icon-s-help\"\r\n\t\t\t\t\t\t\t\tstyle=\"color: #17abe3;font-weight: bold;font-size: 14px;\">{{ '业务流' + (scope.$index+1) + ': ' }}</span>\r\n\t\t\t\t\t\t\t<span style=\"font-weight: bold;font-size: 14px;\">{{ scope.row.name }}</span>\r\n\t\t\t\t\t\t</template>\r\n\t\t\t\t\t</el-table-column>\r\n\t\t\t\t\t<el-table-column width=\"90px\">\r\n\t\t\t\t\t\t<template #default=\"scope\">\r\n\t\t\t\t\t\t\t<el-button plain size=\"small\" type=\"danger\" @click='deltaskTInScene(scope.row.id)'\r\n\t\t\t\t\t\t\t\ticon=\"Delete\">删除</el-button>\r\n\t\t\t\t\t\t</template>\r\n\t\t\t\t\t</el-table-column>\r\n\t\t\t\t</el-table>\r\n\t\t\t\t<el-button @click=\"drawer = true\" plain icon=\"Plus\" size=\"small\" type=\"primary\">添加测试业务流</el-button>\r\n\t\t\t</div>\r\n\t\t\t<!-- 测试任务执行的结果 -->\r\n\t\t\t<div class='card' style='margin-top:10px'>\r\n\t\t\t\t<el-divider content-position=\"left\"><b>执行记录</b></el-divider>\r\n\t\t\t\t<el-table :data=\"records\" class=\"table-style\" size=\"small\" border>\r\n\t\t\t\t\t<el-table-column prop=\"create_time\" label=\"执行时间\" min-width=\"140\">\r\n\t\t\t\t\t\t<template #default=\"scope\">\r\n\t\t\t\t\t\t\t{{ tools.rTime(scope.row.create_time) }}\r\n\t\t\t\t\t\t</template>\r\n\t\t\t\t\t</el-table-column>\r\n\t\t\t\t\t<el-table-column prop=\"env_name\" label=\"测试环境\" min-width=\"110\"></el-table-column>\r\n\t\t\t\t\t<el-table-column prop=\"all\" label=\"总用例\" min-width=\"50\">\r\n\t\t\t\t\t\t<template #default=\"scope\">\r\n\t\t\t\t\t\t\t<span v-if=\"scope.row.statue !== '执行中'\">{{ scope.row.all }}</span>\r\n\t\t\t\t\t\t</template>\r\n\t\t\t\t\t</el-table-column>\r\n\r\n\t\t\t\t\t<el-table-column label=\"通过数\" min-width=\"50\">\r\n\t\t\t\t\t\t<template #default=\"scope\">\r\n\t\t\t\t\t\t\t<span v-if=\"scope.row.statue !== '执行中'\">{{ scope.row.success }}</span>\r\n\t\t\t\t\t\t</template>\r\n\t\t\t\t\t</el-table-column>\r\n\t\t\t\t\t<el-table-column label=\"通过率\" min-width=\"80\">\r\n\t\t\t\t\t\t<template #default=\"scope\">\r\n\t\t\t\t\t\t\t<span v-if=\"scope.row.statue !== '执行中'\">{{ scope.row.pass_rate + '%' }}</span>\r\n\t\t\t\t\t\t</template>\r\n\t\t\t\t\t</el-table-column>\r\n\t\t\t\t\t<el-table-column label=\"测试报告\" width=\"100\">\r\n\t\t\t\t\t\t<template #default=\"scope\">\r\n\t\t\t\t\t\t\t<span v-if=\"scope.row.statue === '执行中'\">\r\n\t\t\t\t\t\t\t\t<el-tag>{{ scope.row.statue }}...</el-tag>\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t<el-button v-else type=\"primary\" icon=\"View\" plain size=\"small\"\r\n\t\t\t\t\t\t\t\t@click=\"openReport(scope.row)\">\r\n\t\t\t\t\t\t\t\t报告\r\n\t\t\t\t\t\t\t</el-button>\r\n\t\t\t\t\t\t</template>\r\n\t\t\t\t\t</el-table-column>\r\n\t\t\t\t</el-table>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n\r\n\t<!-- 添加测试业务流到测试任务中 -->\r\n\t<el-drawer v-model=\"drawer\" direction=\"rtl\" size=\"30%\" :show-close=\"false\">\r\n\t\t<template #header><b>添加测试流程</b></template>\r\n\t\t<div class=\"select_content\">\r\n\t\t\t<el-table ref=\"addRef\" @selection-change=\"selectTable\" size=\"small\" :data=\"Scents2()\" tooltip-effect=\"dark\"\r\n\t\t\t\tstyle=\"width: 100%\">\r\n\t\t\t\t<el-table-column type=\"selection\" min-width=\"40\"></el-table-column>\r\n\t\t\t\t<el-table-column prop=\"name\" label=\"全选\" min-width=\"120\"></el-table-column>\r\n\t\t\t</el-table>\r\n\t\t</div>\r\n\t\t<div style=\"margin: 10px; text-align: center;\">\r\n\t\t\t<el-tooltip class=\"item\" effect=\"dark\" content=\"添加选中测试流程到任务中\" placement=\"top-start\">\r\n\t\t\t\t<el-button @click=\"addScentToTask\" plain type=\"success\" size=\"small\">确认添加</el-button>\r\n\t\t\t</el-tooltip>\r\n\t\t\t<el-tooltip class=\"item\" effect=\"dark\" content=\"清除选中选项\" placement=\"top-start\">\r\n\t\t\t\t<el-button plain type=\"warning\" size=\"small\" @click=\"$refs.addRef.clearSelection()\">清除选中</el-button>\r\n\t\t\t</el-tooltip>\r\n\t\t\t<el-tooltip class=\"item\" effect=\"dark\" content=\"关闭当前窗口\" placement=\"top-start\">\r\n\t\t\t\t<el-button plain type=\"danger\" size=\"small\" @click=\"drawer = false\">关闭窗口</el-button>\r\n\t\t\t</el-tooltip>\r\n\t\t</div>\r\n\t</el-drawer>\r\n\r\n\r\n</template>\r\n\r\n<script setup>\r\nimport { ProjectStore } from '@/store/modoles/proStore'\r\nimport { ElNotification, ElMessageBox, ElMessage } from 'element-plus'\r\nimport api from '@/api/index'\r\nimport { ref, onMounted } from 'vue'\r\nimport tools from '@/utils/dateTools'\r\nimport { useRouter } from 'vue-router'\r\nconst pstore = ProjectStore()\r\nconst router=useRouter()\r\n// 选择的测试计划\r\nlet activaTask = ref({\r\n    id: \"\",\r\n    name: \"\"\r\n})\r\n// 测试计划的执行记录\r\nlet records = ref([])\r\n// 测试计划中的测试业务流\r\nlet scene = ref([])\r\n\r\n// 选择某个测试业务流\r\nfunction selectTask(item) {\r\n    activaTask.value = item\r\n    getTaskInfo()\r\n    getTaskRecords()\r\n}\r\n// 默认选中第一个为激活的测试计划\r\nonMounted(() => {\r\n\t\tif (pstore.taskList.length > 0) {\r\n\t\t\tselectTask(pstore.taskList[0])\r\n\t\t}\r\n\r\n\t})\r\n\r\n// 添加测试计划\r\nasync function addTask() {\r\n\t\tif (pstore.sceneList.length == 0) {\r\n\t\t\tElMessage({\r\n            type: 'error',\r\n            message: '请添加测试业务后再创建测试计划',})\r\n\t\t\treturn\r\n\t\t}\r\n\t\tconst params = {\r\n\t\t\tproject: pstore.pro.id,\r\n\t\t\tname: \"新建测试计划\",\r\n\t\t\tscene: [pstore.sceneList[0].id]\r\n\t\t};\r\n\t\tconst res = await api.addTestTask(params);\r\n\t\tif (res.status === 201) {\r\n\t\t\tElMessage({\r\n            type: 'success',\r\n            message: '添加成功',})\r\n\t\t\t// 更新页面数据\r\n\t\t\tpstore.getTestTask()\r\n\t\t\t// 选中新创建的业务流\r\n\t\t\tselectTask(res.data)\r\n\t\t}\r\n\t}\r\n\r\n// 获取测试计划中的getTaskScene\r\nasync function getTaskInfo() {\r\n\t\tconst response = await api.getTestTask(activaTask.value.id)\r\n\t\tif (response.status == 200) {\r\n\t\t\tscene.value = response.data.scene\r\n\t\t}\r\n\t}\r\n\r\n// 获取测试运行记录\r\nasync function getTaskRecords() {\r\n\t\tconst response = await api.getTestRecords({ task: activaTask.value.id })\r\n\t\tif (response.status == 200) {\r\n\t\t\trecords.value = response.data\r\n\t\t}\r\n\t}\r\n\r\n// 删除测试计划\r\nasync function delTask(id) {\r\n\t\tElMessageBox.confirm('删除后数据不可恢复，确定要删除吗?', '提示', {\r\n\t\t\t\tconfirmButtonText: '确定',\r\n\t\t\t\tcancelButtonText: '取消',\r\n\t\t\t\ttype: 'warning'\r\n\t\t\t})\r\n\t\t\t.then(async () => {\r\n\t\t\t\tconst response = await api.delTestTask(activaTask.value.id);\r\n\t\t\t\tif (response.status === 204) {\r\n\t\t\t\t\tElMessage({\r\n                        type: 'success',\r\n                        message: '添加成功',})\r\n\t\t\t\t\tpstore.getTestTask()\r\n\t\t\t\t\tselectTask(pstore.taskList[0])\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.catch(() => {\r\n\t\t\t\tElMessage({\r\n                    type: 'success',\r\n                    message: '添加成功',})\r\n\t\t\t});\r\n\t}\r\n\r\n// 保存(更新)测试计划名\r\nasync function saveTask() {\r\n\t\tconst response = await api.updateTestTask(activaTask.value.id, activaTask.value);\r\n\t\tif (response.status === 200) {\r\n\t\t\tElMessage({\r\n\t\t\t\ttype: 'success',\r\n\t\t\t\tmessage: '保存成功',\r\n\t\t\t});\r\n\t\t\tpstore.getTestTask();\r\n\t\t}\r\n\t}\r\n\r\npstore.getTestTask()\r\n// 运行测试计划\r\nasync function runTask() {\r\n\t\tif (pstore.env) {\r\n\t\t\tconst params = {\r\n\t\t\t\tenv: pstore.env,\r\n\t\t\t\ttask: activaTask.value.id\r\n\t\t\t};\r\n\t\t\tElMessage({\r\n\t\t\t\ttype: 'success',\r\n\t\t\t\tmessage: '开始运行!',\r\n\t\t\t});\r\n\t\t\tconst response = await api.runTestTask(params);\r\n\t\t\tif (response.status === 200) {\r\n\t\t\t\tElNotification({\r\n\t\t\t\t\ttitle: '提示',\r\n\t\t\t\t\tmessage: response.data.msg\r\n\t\t\t\t});\r\n\t\t\t}else{\r\n                ElMessage({\r\n\t\t\t\ttype: 'error',\r\n\t\t\t\tmessage: '测试任务运行异常'\r\n\t\t\t});\r\n            }\r\n\t\t} else {\r\n\t\t\tElMessage({\r\n\t\t\t\ttype: 'warning',\r\n\t\t\t\tmessage: '当前未选中测试环境!'\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n// 删除测试计划中的业务流\r\nasync function deltaskTInScene(id) {\r\n\t\tconsole.log(id)\r\n\t\tlet scenes = []\r\n        // 遍历数组将未选择的业务流id 存入新的数组中\r\n\t\tscene.value.forEach((item) => {\r\n\t\t\tif (item.id !== id) {\r\n\t\t\t\tscenes.push(item.id)\r\n\t\t\t}\r\n\t\t})\r\n\t\tlet params = { ...activaTask.value }\r\n\t\tparams.scene = scenes\r\n\t\tconst response = await api.updateTestTask(params.id, params)\r\n\t\tif (response.status === 200) {\r\n\t\t\tElMessage({\r\n\t\t\t\ttype: 'success',\r\n\t\t\t\tmessage: '删除成功',\r\n\t\t\t});\r\n\t\t\tgetTaskInfo();\r\n\t\t}else{\r\n            ElMessage({\r\n\t\t\t\ttype: 'error',\r\n\t\t\t\tmessage: '删除失败',\r\n\t\t\t});\r\n        }\r\n\t}\r\n// 打开测试报告\r\nfunction openReport(item){\r\n    router.push({\r\n        name:\"report\",\r\n        params:{\r\n            id:item.id\r\n        }\r\n    })\r\n}\r\n// 添加的业务流弹框是否显示\r\nlet drawer = ref(false)\r\n\t// 添加选中的业务流\r\nlet addScentList = ref([])\r\n// 可以添加到任务中的业务流\r\nfunction Scents2() {\r\n    // 获取任务中没有添加的所有测试业务流\r\n    let newSuites = pstore.sceneList.filter((item, index) => {\r\n        return !scene.value.find(item2 => {\r\n            return item2.id == item.id;\r\n        });\r\n    });\r\n    return newSuites;\r\n}\r\n// 点击选择框时\r\nfunction selectTable(val) {\r\n\t\t// 将选中的测试业务流id保存到addScentList中\r\n\t\tval.forEach((item) => {\r\n\t\t\taddScentList.value.push(item.id)\r\n\t\t})\r\n\t}\r\n\r\nconst addRef = ref()\r\n// 添加选中的测试业务流到测试任务中\r\nasync function addScentToTask() {\r\n    let params = { ...activaTask.value }\r\n    params.scene.push(...addScentList.value)\r\n    // 发送请求\r\n    const response = await api.updateTestTask(params.id, params)\r\n    if (response.status === 200) {\r\n        ElMessage({\r\n            type: 'success',\r\n            message: '添加成功'\r\n        });\r\n        // 更新页面数据\r\n        getTaskInfo()\r\n    }\r\n\r\n}\r\n</script>\r\n\r\n\r\n<style lang=\"scss\" scoped>\r\n\t.main_box {\r\n\t\theight: calc(100% - 42px);\r\n\t\tdisplay: flex;\r\n\r\n\t\t// 左侧样式\r\n\t\t.left_box {\r\n\t\t\twidth: 200px;\r\n\r\n\t\t\t.title_box {\r\n\t\t\t\tdisplay: flex;\r\n\t\t\t\theight: 40px;\r\n\t\t\t\talign-items: center;\r\n\t\t\t\tjustify-content: center;\r\n\t\t\t\tborder-bottom: solid 1px #6a6a6a;\r\n\r\n\t\t\t\t.name {\r\n\t\t\t\t\tfont-weight: bold;\r\n\t\t\t\t\tfont-size: 18px;\r\n\t\t\t\t\tmargin: 0 10px;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t.el-menu {\r\n\t\t\t\tborder: none;\r\n\r\n\t\t\t\t.el-menu-item {\r\n\t\t\t\t\theight: 35px;\r\n\t\t\t\t\tline-height: 35px;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\r\n\t\t}\r\n\r\n\t\t// 右侧样式\r\n\t\t.right_box {\r\n\t\t\tflex: 1;\r\n\t\t\tpadding: 10px;\r\n\r\n\t\t\t.name_edit {\r\n\t\t\t\tdisplay: flex;\r\n\r\n\t\t\t\t.btns {\r\n\t\t\t\t\twidth: 200px;\r\n\t\t\t\t\ttext-align: center;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n</style>","import script from \"./TestPlanView.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./TestPlanView.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./TestPlanView.vue?vue&type=style&index=0&id=70c88df5&lang=scss&scoped=true\"\n\nimport exportComponent from \"../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-70c88df5\"]])\n\nexport default __exports__"],"names":["exports","sfc","props","target","__vccOpts","key","val","ProjectStore","defineStore","state","pro","env_list","env","inetrfaces","sceneList","taskList","getters","interface1","this","filter","item","type","interface2","actions","getInterFaces","res","api","id","status","data","console","log","getScenes","getTestTask","getTestTaskList","persist","enabled","strategies","storage","localStorage","dateFtt","fmt","date","o","getMonth","getDate","getHours","getMinutes","getSeconds","Math","floor","getMilliseconds","k","test","replace","RegExp","$1","getFullYear","substr","length","rTime","Date","rDate","rhost","pstore","router","useRouter","activaTask","ref","name","records","scene","selectTask","value","getTaskInfo","getTaskRecords","async","addTask","ElMessage","message","params","project","addTestTask","response","getTestRecords","task","delTask","ElMessageBox","confirm","confirmButtonText","cancelButtonText","then","delTestTask","catch","saveTask","updateTestTask","runTask","runTestTask","ElNotification","title","msg","deltaskTInScene","scenes","forEach","push","openReport","onMounted","drawer","addScentList","Scents2","newSuites","index","find","item2","selectTable","addRef","addScentToTask","__exports__"],"sourceRoot":""}
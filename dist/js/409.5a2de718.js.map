{"version":3,"file":"js/409.5a2de718.js","mappings":"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","sources":["webpack://api_test_vue/./src/store/modoles/proStore.js","webpack://api_test_vue/./src/components/ResultView.vue","webpack://api_test_vue/./src/components/ResultView.vue?0cbe","webpack://api_test_vue/./src/views/home/bugs/BugsView.vue","webpack://api_test_vue/./src/views/home/bugs/BugsView.vue?8618"],"sourcesContent":["import {defineStore} from 'pinia'\r\nimport api from '@/api/index'\r\n\r\nexport const ProjectStore=defineStore('proStore',\r\n    {   \r\n        // 全局数据存储\r\n        state: () => {\r\n            return {\r\n                // 项目信息\r\n                pro:{},\r\n                // 环境列表\r\n                env_list:[],\r\n                // 选择的测试环境\r\n                env:0,\r\n                // 保存接口列表\r\n                inetrfaces:[],\r\n                // 测试业务流列表\r\n                sceneList:[],\r\n                // 测试计划列表\r\n                taskList: []\r\n            }\r\n\r\n        },\r\n        getters:{\r\n            // 过滤出项目接口\r\n            interface1(){\r\n                return this.inetrfaces.filter((item) => {\r\n                    return item.type==='1'\r\n                })\r\n            },\r\n            // 过滤出第三方接口\r\n            interface2(){\r\n                return this.inetrfaces.filter((item) => {\r\n                    return item.type==='2'\r\n                })\r\n            }\r\n        },\r\n        // 定义全局的方法\r\n        actions:{\r\n            // 获取接口列表\r\n            async getInterFaces(){\r\n                const res=await api.getInterFaces(this.pro.id)\r\n                if (res.status===200){\r\n                    this.inetrfaces=res.data\r\n                }else{\r\n                    console.log(`获取项目id${this.pro.id}失败`)\r\n                }\r\n            },\r\n            // 获取测试业务流列表\r\n            async getScenes(){\r\n                const res=await api.getScenes(this.pro.id)\r\n                if (res.status===200){\r\n                    this.sceneList=res.data\r\n                }\r\n            },\r\n            // 获取测试计划\r\n            async getTestTask(){\r\n                const res=await api.getTestTaskList(this.pro.id)\r\n                if (res.status===200){\r\n                    this.taskList=res.data\r\n                }\r\n            }\r\n        },\r\n        persist: {\r\n            enabled:true,\r\n            strategies:{\r\n                key:\"users\",\r\n                storage:localStorage\r\n            }\r\n        }\r\n    },\r\n    \r\n  \r\n)","<template>\r\n    <!-- 运行结果展示 -->\r\n    <el-tabs type=\"border-card\">\r\n        <el-tab-pane label=\"响应体\">\r\n            <EditorCopmponts v-model=\"result.response_body\" height='200px' lang=\"json\" readOnly=True></EditorCopmponts>\r\n        </el-tab-pane>\r\n        <el-tab-pane label=\"响应头\">\r\n            <div v-for=\"(i,j) in result.response_header\">\r\n                <el-tag type=\"primary\">{{j}}</el-tag>\r\n                <span>:</span>\r\n                <el-tag type=\"success\">{{ i }}</el-tag>\r\n            </div>\r\n        </el-tab-pane>\r\n        <el-tab-pane label=\"请求信息\">\r\n            <el-collapse >\r\n                <el-collapse-item title=\"General\" name=\"1\">\r\n                    <template #icon=\"{ isActive }\">\r\n                    <span class=\"icon-ele\">\r\n                        {{ isActive ? '关闭' : '展开' }}\r\n                    </span>\r\n                    </template>\r\n                    <div>\r\n                        <el-tag type=\"success\">RequestMethod: </el-tag>\r\n                        <el-tag type=\"danger\">{{ result.method }}</el-tag>\r\n                    </div>\r\n                    <div>\r\n                        <el-tag type=\"success\">RequestUrl: </el-tag>\r\n                        <el-tag type=\"danger\">{{ result.url }}</el-tag>\r\n                    </div>\r\n                </el-collapse-item>\r\n                <el-collapse-item title=\"Request Header\" name=\"2\">\r\n                    <template #icon=\"{ isActive }\">\r\n                    <span class=\"icon-ele\">\r\n                        {{ isActive ? '关闭' : '展开' }}\r\n                    </span>\r\n                    </template>\r\n                    <div v-for=\"(i,j) in result.response_header\">\r\n                        <el-tag type=\"success\">{{j}}: </el-tag>\r\n                        <el-tag type=\"danger\">{{ i }}</el-tag>\r\n                    </div>\r\n                </el-collapse-item>\r\n                <el-collapse-item title=\"Request Body\" name=\"3\">\r\n                    <template #icon=\"{ isActive }\">\r\n                    <span class=\"icon-ele\">\r\n                        {{ isActive ? '关闭' : '展开' }}\r\n                    </span>\r\n                    </template>\r\n                    <div>\r\n                        <el-tag type=\"danger\">{{ result.requests_body }}</el-tag>\r\n                    </div>\r\n                </el-collapse-item>    \r\n            </el-collapse>\r\n        </el-tab-pane>\r\n        <el-tab-pane label=\"日志\">\r\n            <div style=\"overflow-x: auto;\">\r\n                <div v-for=\"log in result.log_data\" >\r\n                <el-tag v-if=\"log[0]==='INFO'\" type=\"success\">{{ log[0] }}:{{ log[1] }}</el-tag>\r\n                <el-tag v-else-if=\"log[0]==='DEBUG'\" type=\"info\">{{ log[0] }}:{{ log[1] }}</el-tag>\r\n                <el-tag v-else-if=\"log[0]==='ERROR'\" type=\"danger\">{{ log[0] }}:{{ log[1] }}</el-tag>\r\n                <el-tag v-else type=\"warning\">{{ log[0] }}:{{ log[1] }}</el-tag>\r\n            </div>\r\n            </div>\r\n            \r\n        </el-tab-pane>\r\n        <el-tab-pane disabled>\r\n            <!-- 使用插槽更改数据用# label键表示 -->\r\n            <template #label>\r\n                <span v-if=\"result.state==='成功'\" style=\"color: green;\">Assert:{{ result.state }}</span>\r\n                <span v-else-if=\"result.state==='错误'\" style=\"color: brown;\">Assert:{{ result.state }}</span>\r\n                <span v-else>Assert:{{ result.state }}</span>\r\n            </template>\r\n        </el-tab-pane>\r\n        <el-tab-pane disabled>\r\n            <!-- 使用插槽更改数据用# label键表示 -->\r\n            <template #label>\r\n                <span v-if=\"200 <= result.status_cede && result.status_cede <300\" style=\"color: green;\">code:{{ result.status_cede }}</span>\r\n                <span v-else-if=\"300 <= result.status_cede && result.status_cede < 400\" style=\"color: slategray;\">code:{{ result.status_cede }}</span>\r\n                <span v-else-if=\"400 <= result.status_cede && result.status_cede < 500\" style=\"color: yellow;\">code:{{ result.status_cede }}</span>\r\n                <span v-else-if=\"500 <= result.status_cede && result.status_cede < 600\" style=\"color: brown;\">code:{{ result.status_cede }}</span>\r\n                <span v-else>code:{{ result.status_cede }}</span>\r\n            </template>\r\n        </el-tab-pane>\r\n        <el-tab-pane disabled>\r\n            <!-- 使用插槽更改数据用# label键表示 -->\r\n            <template #label>\r\n                Time:{{ result.run_time }}\r\n            </template>\r\n        </el-tab-pane>\r\n    </el-tabs>\r\n    <!-- 提交bug按钮 -->\r\n    <div style=\"margin-top: 10px;width: 100%;text-align: center;\" v-if=\"result.state === '失败'\">\r\n\t\t<el-button v-show='!hideBtn' @click=\"addBugDlg = true\" plain size=\"small\">提交bug{{showbBtn}}</el-button>\r\n\t</div>\r\n\t<!-- 添加bug的弹框 -->\r\n\t<el-dialog title=\"提交bug\" v-model=\"addBugDlg\" width=\"30%\">\r\n\t\t<el-form :model=\"bugForm\">\r\n\t\t\t<el-form-item label=\"所属接口\">\r\n\t\t\t\t<el-select size=\"small\" v-model=\"bugForm.interface\" placeholder=\"bug对应的接口\" style=\"width: 100%;\">\r\n\t\t\t\t\t<el-option :label=\"iter.name + ' ' + iter.url\" :value=\"iter.id\" v-for=\"iter in interfaces\"\r\n\t\t\t\t\t\t:key=\"iter.id\"></el-option>\r\n\t\t\t\t</el-select>\r\n\t\t\t</el-form-item>\r\n\t\t\t<el-form-item label=\"bug描述\"><el-input :autosize=\"{ minRows: 3, maxRows: 4 }\" v-model=\"bugForm.desc\"\r\n\t\t\t\t\ttype=\"textarea\" autocomplete=\"off\"></el-input></el-form-item>\r\n\t\t</el-form>\r\n\t\t<template #footer>\r\n\t\t\t<div class=\"dialog-footer\">\r\n\t\t\t\t<el-button size=\"small\" @click=\"addBugDlg = false\">取 消</el-button>\r\n\t\t\t\t<el-button size=\"small\" type=\"primary\" plain @click=\"saveBug\">确 定</el-button>\r\n\t\t\t</div>\r\n\t\t</template>\r\n\t</el-dialog>\r\n</template>\r\n\r\n<script setup>\r\nimport { defineProps,ref,reactive} from 'vue';\r\nimport EditorCopmponts from '@/views/home/components/EditorCopmponts.vue';\r\n\r\n\r\n// 声明defineProps 对象通过里面的属性接收外部组件外部的参数\r\nconst props = defineProps({\r\n    result:{},\r\n    hideBtn: false,\r\n    // interID:null\r\n})\r\nconst addBugDlg = ref(false)\r\nconst bugForm = reactive({\r\n        project: null,\r\n\t\tinterface: null,\r\n\t\tdesc: '',\r\n\t\tinfo: '',\r\n\t\tstatus: '未处理'\r\n\t})\r\n// 保存bug的方法\r\nasync function saveBug() {\r\n\t\tbugForm.project = proStores.pro.id;\r\n        // bugForm.interface=props.interID\r\n\t\tbugForm.info = props.result;\r\n\t\tconst response = await api.addBug(bugForm);\r\n\t\tif (response.status === 201) {\r\n\t\t\tElNotification({\r\n\t\t\t\ttype: 'success',\r\n\t\t\t\ttitle: 'bug提交成功',\r\n\t\t\t\tduration: 1000\r\n\t\t\t});\r\n\t\t\taddBugDlg.value = false;\r\n\t\t}\r\n\t}\r\n\r\n</script>\r\n\r\n<style scoped>\r\n.icon-ele {\r\n  margin: 0 8px 0 auto;\r\n  color: #409eff;\r\n}\r\n</style>","import script from \"./ResultView.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ResultView.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./ResultView.vue?vue&type=style&index=0&id=520d49ff&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-520d49ff\"]])\n\nexport default __exports__","<template>\r\n    <div class=\"card page-box\">\r\n        <span class=\"el-icon-s-data\" style=\"color: #17abe3;\"><b>bug统计</b></span>\r\n        <el-row :gutter=\"10\">\r\n            <el-col :span=\"12\">\r\n                <div class=\"chartBox\" id=\"chart1Box\"></div>\r\n            </el-col>\r\n            <el-col :span=\"12\">\r\n                <div class=\"chartBox\" id=\"chart2Box\"></div>\r\n            </el-col>\r\n        </el-row>\r\n        <div class='card' style=\"margin-top: 10px;padding: 10px;\">\r\n            <el-row>\r\n                <el-button @click=\"showBugs = bugs\" type=\"primary\" plain size=\"small\">所有bug</el-button>\r\n                <el-badge :value=\"bugs1.length\" :hidden=\"bugs1.length === 0\" class=\"item\" :max=\"99\"\r\n                    style=\"margin: 0 10px;\">\r\n                    <el-button @click=\"showBugs = bugs1\" type=\"danger\" plain size=\"small\">未处理bug</el-button>\r\n                </el-badge>\r\n                <el-button @click=\"showBugs = bugs2\" type=\"warning\" plain size=\"small\">处理中bug</el-button>\r\n                <el-button @click=\"showBugs = bugs3\" type=\"success\" plain size=\"small\">处理完bug</el-button>\r\n                <el-button @click=\"showBugs = bugs4\" type=\"info\" plain size=\"small\">无效bug</el-button>\r\n            </el-row>\r\n            <el-table :data=\"showBugs\" style=\"width: 100%;\" size=\"small\" border>\r\n                <el-table-column label=\"提交时间\" min-width=\"120\" show-overflow-tooltip>\r\n                    <template #default=\"scope\">\r\n                        <span>{{ tools.rTime(scope.row.create_time) }}</span>\r\n                    </template>\r\n                </el-table-column>\r\n                <el-table-column show-overflow-tooltip prop=\"desc\" label=\"bug描述\" min-width=\"120\"></el-table-column>\r\n                <el-table-column show-overflow-tooltip prop=\"interface_url\" label=\"所属接口\"\r\n                    min-width=\"00\"></el-table-column>\r\n                <el-table-column prop=\"status\" label=\"bug状态\" min-width=\"80\"></el-table-column>\r\n                <el-table-column min-width=\"180\">\r\n                    <template #default=\"scope\">\r\n                        <div style=\"text-align: right;\">\r\n                            <el-tooltip class=\"item\" effect=\"dark\" content=\"查看bug详情\" placement=\"top\">\r\n                                <el-button icon=\"View\" @click=\"showBugInfo(scope.row)\" size=\"small\" type=\"primary\"\r\n                                    plain></el-button>\r\n                            </el-tooltip>\r\n                            <el-tooltip class=\"item\" effect=\"dark\" content=\"修改bug状态\" placement=\"top\">\r\n                                <el-button icon=\"Edit\" @click=\"\r\n                                        state.updateBugDlg = true;\r\n                                        state.updateBugForm =scope.row;\r\n                                    \" size=\"small\" type=\"primary\" plain></el-button>\r\n                            </el-tooltip>\r\n                        </div>\r\n                    </template>\r\n                </el-table-column>\r\n            </el-table>\r\n        </div>\r\n        </div>\r\n\r\n        <!-- 查看bug信息 -->\r\n        <el-drawer v-model=\"state.showBug\"  :with-header=\"false\" size='50%'>\r\n        <el-scrollbar height=\"calc(100vh - 20px)\">\r\n            <el-card>\r\n                <b>bug信息</b>\r\n                <div style=\"margin-top: 10px;\">\r\n                    <el-descriptions :column=\"4\" direction=\"vertical\" border>\r\n                        <el-descriptions-item label=\"提交者\">{{state.bugInfo.user}}</el-descriptions-item>\r\n                        <el-descriptions-item label=\"bug状态\">{{ state.bugInfo.status }}</el-descriptions-item>\r\n                        <el-descriptions-item label=\"所属接口\">{{ state.bugInfo.interface_url }}</el-descriptions-item>\r\n                        <el-descriptions-item\r\n                            label=\"提交时间\">{{ tools.rTime(state.bugInfo.create_time) }}</el-descriptions-item>\r\n                    </el-descriptions>\r\n                </div>\r\n            </el-card>\r\n            <el-card style=\"margin:5px 0;min-height: 400px;\" v-if='state.bugLogs.info.url'>\r\n                <b>用例执行信息</b>\r\n                <div style=\"margin-top: 10px;\">\r\n                    <Result :result=\"state.bugLogs.info\" :hideBtn=\"true\"></Result>\r\n                </div>\r\n            </el-card>\r\n            <el-card style=\"min-height: 400px;\" v-if=\"state.bugLogs\">\r\n                <b>bug处理记录</b>\r\n                <div style=\"margin-top: 10px;\">\r\n                    <el-timeline>\r\n                        <el-timeline-item v-for=\"(activity, index) in state.bugLogs.handle\" :key=\"index\"\r\n                            :timestamp=\"tools.rDate(activity.create_time)\" placement=\"top\">\r\n                            <el-card>\r\n                                <h4>{{ activity.handle }}</h4>\r\n                                <p>{{ activity.update_user }}操作于 {{ tools.rTime(activity.create_time) }}</p>\r\n                            </el-card>\r\n                        </el-timeline-item>\r\n                    </el-timeline>\r\n                </div>\r\n            </el-card>\r\n            <el-empty v-else description=\"无\" :image-size=\"400\"></el-empty>\r\n        </el-scrollbar>\r\n        </el-drawer>\r\n\r\n        <!-- 修改状态 -->\r\n        <el-dialog title=\"修改bug状态\" v-model=\"state.updateBugDlg\" width=\"30%\">\r\n        <el-form :model=\"state.updateBugForm\">\r\n            <el-form-item label=\"bug状态\">\r\n                <el-select style=\"width: 100%;\" v-model=\"state.updateBugForm.status\" placeholder=\"请选择bug状态\">\r\n                    <el-option label=\"未处理\" value=\"未处理\"></el-option>\r\n                    <el-option label=\"处理中\" value=\"处理中\"></el-option>\r\n                    <el-option label=\"处理完\" value=\"处理完\"></el-option>\r\n                    <el-option label=\"无效bug\" value=\"无效bug\"></el-option>\r\n                </el-select>\r\n            </el-form-item>\r\n        </el-form>\r\n        <template #footer>\r\n            <div class=\"dialog-footer\">\r\n                <el-button size=\"small\" @click=\"state.updateBugDlg = false\">取 消</el-button>\r\n                <el-button size=\"small\" type=\"success\" @click=\"updateBug\">确 定</el-button>\r\n            </div>\r\n        </template>\r\n    </el-dialog>\r\n</template>\r\n\r\n<script setup>\r\nimport tools from '@/utils/dateTools'\r\nimport chart from '@/utils/chart'\r\nimport api from '@/api/index'\r\nimport { ref, onMounted, reactive, computed } from 'vue'\r\nimport { ProjectStore } from '@/store/modoles/proStore'\r\nimport Result from '@/components/ResultView.vue';\r\nimport { ElNotification, ElMessageBox, ElMessage } from 'element-plus'\r\n\r\nconst state = reactive({\r\n\t\tshowBug: false,\r\n\t\tbugInfo: null,\r\n\t\tbugLogs: null,\r\n\t\tupdateBugDlg: false,\r\n\t\tupdateBugForm: {},\r\n\t\t\r\n\t})\r\nconst proStore = ProjectStore()\r\nlet bugs = ref([])\r\nlet showBugs= ref([])\r\n\r\n//获取项目的所有的bug\r\nasync function getAllBug() {\r\n\t\tconst response = await api.getBugs(proStore.pro.id);\r\n\t\tif (response.status === 200) {\r\n\t\t\tbugs.value = response.data;\r\n\t\t\t// 渲染图表\r\n\t\t\tshowTable();\r\n\t\t}\r\n\t}\r\n// 过滤未处理状态的bug数据\r\nconst bugs1 = computed(() => {\r\n    let res = bugs.value.filter((item) => {\r\n        return item.status === '未处理';\r\n    });\r\n    return res\r\n})\r\n// 筛选处理中的bug\r\nconst bugs2 = computed(() => {\r\n\t\treturn bugs.value.filter((item) => {\r\n\t\t\treturn item.status === '处理中';\r\n\t\t});\r\n\t})\r\n// 筛选处理完的bug\r\nconst bugs3 = computed(() => {\r\n    return bugs.value.filter((item) => {\r\n        return item.status === '处理完';\r\n    });\r\n})\r\n// 筛选无效的bug\r\nconst bugs4 = computed(() => {\r\n    return bugs.value.filter((item) => {\r\n        return item.status === '无效bug';\r\n    });\r\n})\r\n\r\nfunction showTable() {\r\n\t\t// 渲染图表\r\n\t\tconst ele = document.querySelector('#chart1Box');\r\n\t\tconst data = [bugs.value.length, bugs3.value.length, bugs2.value.length, bugs1.value.length, bugs4.value.length];\r\n\t\tconst dataLabel = ['bug总数', '处理完', '处理中', '未处理', '无效bug'];\r\n\t\tchart.chart1(ele, data, dataLabel);\r\n\t\tconst ele2 = document.querySelector('#chart2Box');\r\n\t\tchart.chart2(ele2, [\r\n\t\t\t{ value: bugs3.value.length, name: '处理完' },\r\n\t\t\t{ value: bugs2.value.length, name: '开发处理中' },\r\n\t\t\t{ value: bugs1.value.length, name: '未处理' },\r\n\t\t\t{ value: bugs4.value.length, name: '无效bug' }\r\n\t\t]);\r\n\t}\r\n// 显示bug详情\r\nasync function showBugInfo(bug) {\r\n\t\tstate.bugInfo = bug;\r\n\t\tconst response = await api.getBugData(bug.id);\r\n\t\tif (response.status === 200) {\r\n\t\t\tstate.bugLogs = response.data;\r\n\t\t}\r\n\t\tstate.showBug = true\r\n\t}\r\n\r\n// 修改bug状态\r\nasync function updateBug() {\r\n\t\tconst reposne = await api.updateBug(state.updateBugForm.id, state.updateBugForm);\r\n\t\tif (reposne.status === 200) {\r\n\t\t\tElMessage({\r\n\t\t\t\ttype: 'success',\r\n\t\t\t\tmessage: '修改成功',\r\n\t\t\t\tduration: 1000\r\n\t\t\t});\r\n\t\t\tgetAllBug()\r\n\t\t\tstate.updateBugDlg = false;\r\n\t\t}\r\n\t}\r\nonMounted(async () => {\r\n    // 获取数据\r\n    await getAllBug()\r\n    showBugs.value = bugs.value\r\n    \r\n})\r\n</script>\r\n\r\n<style scoped>\r\n\t.bug_list {\r\n\t\theight: calc(100vh - 290px);\r\n\t\toverflow-y: auto;\r\n\t\tmargin-top: 5px;\r\n\t}\r\n\r\n\t.chartBox {\r\n\t\theight: 200px;\r\n\t\tbackground: rgba(78, 78, 80, 0.1);\r\n\t}\r\n</style>","import script from \"./BugsView.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./BugsView.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./BugsView.vue?vue&type=style&index=0&id=649ecec4&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-649ecec4\"]])\n\nexport default __exports__"],"names":["ProjectStore","defineStore","state","pro","env_list","env","inetrfaces","sceneList","taskList","getters","interface1","this","filter","item","type","interface2","actions","getInterFaces","res","api","id","status","data","console","log","getScenes","getTestTask","getTestTaskList","persist","enabled","strategies","key","storage","localStorage","props","__props","addBugDlg","ref","bugForm","reactive","project","interface","desc","info","async","saveBug","proStores","result","response","addBug","ElNotification","title","duration","value","__exports__","showBug","bugInfo","bugLogs","updateBugDlg","updateBugForm","proStore","bugs","showBugs","getAllBug","getBugs","showTable","bugs1","computed","bugs2","bugs3","bugs4","ele","document","querySelector","length","dataLabel","chart","chart1","ele2","chart2","name","showBugInfo","bug","getBugData","updateBug","reposne","ElMessage","message","onMounted"],"sourceRoot":""}
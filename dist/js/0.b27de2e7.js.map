{"version":3,"file":"js/0.b27de2e7.js","mappings":"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","sources":["webpack://api_test_vue/./src/store/modoles/proStore.js","webpack://api_test_vue/./src/utils/dateTools.js","webpack://api_test_vue/./src/views/home/crontab/CrontabView.vue","webpack://api_test_vue/./src/views/home/crontab/CrontabView.vue?e5ea"],"sourcesContent":["import {defineStore} from 'pinia'\r\nimport api from '@/api/index'\r\n\r\nexport const ProjectStore=defineStore('proStore',\r\n    {   \r\n        // 全局数据存储\r\n        state: () => {\r\n            return {\r\n                // 项目信息\r\n                pro:{},\r\n                // 环境列表\r\n                env_list:[],\r\n                // 选择的测试环境\r\n                env:0,\r\n                // 保存接口列表\r\n                inetrfaces:[],\r\n                // 测试业务流列表\r\n                sceneList:[],\r\n                // 测试计划列表\r\n                taskList: []\r\n            }\r\n\r\n        },\r\n        getters:{\r\n            // 过滤出项目接口\r\n            interface1(){\r\n                return this.inetrfaces.filter((item) => {\r\n                    return item.type==='1'\r\n                })\r\n            },\r\n            // 过滤出第三方接口\r\n            interface2(){\r\n                return this.inetrfaces.filter((item) => {\r\n                    return item.type==='2'\r\n                })\r\n            }\r\n        },\r\n        // 定义全局的方法\r\n        actions:{\r\n            // 获取接口列表\r\n            async getInterFaces(){\r\n                const res=await api.getInterFaces(this.pro.id)\r\n                if (res.status===200){\r\n                    this.inetrfaces=res.data\r\n                }else{\r\n                    console.log(`获取项目id${this.pro.id}失败`)\r\n                }\r\n            },\r\n            // 获取测试业务流列表\r\n            async getScenes(){\r\n                const res=await api.getScenes(this.pro.id)\r\n                if (res.status===200){\r\n                    this.sceneList=res.data\r\n                }\r\n            },\r\n            // 获取测试计划\r\n            async getTestTask(){\r\n                const res=await api.getTestTaskList(this.pro.id)\r\n                if (res.status===200){\r\n                    this.taskList=res.data\r\n                }\r\n            }\r\n        },\r\n        persist: {\r\n            enabled:true,\r\n            strategies:{\r\n                key:\"users\",\r\n                storage:localStorage\r\n            }\r\n        }\r\n    },\r\n    \r\n  \r\n)","import { ref } from \"vue\";\r\n\r\nfunction dateFtt(fmt, date) { //author: meizz \r\n\tvar o = {\r\n\t\t\"M+\": date.getMonth() + 1, //月份 \r\n\t\t\"d+\": date.getDate(), //日 \r\n\t\t\"h+\": date.getHours(), //小时 \r\n\t\t\"m+\": date.getMinutes(), //分 \r\n\t\t\"s+\": date.getSeconds(), //秒 \r\n\t\t\"q+\": Math.floor((date.getMonth() + 3) / 3), //季度 \r\n\t\t\"S\": date.getMilliseconds() //毫秒 \r\n\t};\r\n\tif (/(y+)/.test(fmt))\r\n\t\tfmt = fmt.replace(RegExp.$1, (date.getFullYear() + \"\").substr(4 - RegExp.$1.length));\r\n\tfor (var k in o)\r\n\t\tif (new RegExp(\"(\" + k + \")\").test(fmt))\r\n\t\t\tfmt = fmt.replace(RegExp.$1, (RegExp.$1.length == 1) ? (o[k]) : ((\"00\" + o[k]).substr((\"\" + o[k]).length)));\r\n\treturn fmt;\r\n}\r\n\r\nexport const useTime = () => {\r\n\tconst year = ref(0); // 年份\r\n\tconst month = ref(0); // 月份\r\n\tconst week = ref(\"\"); // 星期几\r\n\tconst day = ref(0); // 天数\r\n\tconst hour = ref(0); // 小时\r\n\tconst minute = ref(0); // 分钟\r\n\tconst second = ref(0); // 秒\r\n\tconst nowTime = ref(\"\"); // 当前时间\r\n\t// 更新时间\r\n\tconst updateTime = () => {\r\n\t\tconst date = new Date();\r\n\t\tyear.value = date.getFullYear();\r\n\t\tmonth.value = date.getMonth() + 1;\r\n\t\tweek.value = \"日一二三四五六\".charAt(date.getDay());\r\n\t\tday.value = date.getDate();\r\n\t\thour.value =\r\n\t\t\t(date.getHours() + \"\")?.padStart(2, \"0\") ||\r\n\t\t\tnew Intl.NumberFormat(undefined, { minimumIntegerDigits: 2 }).format(date.getHours());\r\n\t\tminute.value =\r\n\t\t\t(date.getMinutes() + \"\")?.padStart(2, \"0\") ||\r\n\t\t\tnew Intl.NumberFormat(undefined, { minimumIntegerDigits: 2 }).format(date.getMinutes());\r\n\t\tsecond.value =\r\n\t\t\t(date.getSeconds() + \"\")?.padStart(2, \"0\") ||\r\n\t\t\tnew Intl.NumberFormat(undefined, { minimumIntegerDigits: 2 }).format(date.getSeconds());\r\n\t\tnowTime.value =\r\n\t\t\t`${year.value}年${month.value}月${day.value} ${hour.value}:${minute.value}:${second.value}`;\r\n\t};\r\n\r\n\tupdateTime();\r\n\r\n\treturn { year, month, day, hour, minute, second, week, nowTime };\r\n}\r\n\r\n\r\nexport default {\r\n\t// 格式化日期时间\r\n\trTime(date) {\r\n\t\treturn dateFtt('yyyy-MM-dd hh:mm:ss', new Date(date))\r\n\t},\r\n\t// 格式化日期\r\n\trDate(date) {\r\n\t\treturn dateFtt('yyyy-MM-dd', new Date(date))\r\n\t},\r\n\trhost(date) {\r\n\t\treturn dateFtt('yyyy-MM-dd hh:mm', new Date(date))\r\n\t},\r\n\r\n\r\n}","<template>\r\n    <div class=\"card page-box left_card_box\">\r\n\t\t<el-button plain @click='clickAdd' style=\"margin: 10px 5px;\" type=\"primary\" icon=\"Plus\"\r\n\t\t\tsize=\"small\">添加定时任务</el-button>\r\n\r\n\t\t<el-table :data=\"state.cronList\" style=\"width: 100%\" size=\"small\" border>\r\n\t\t\t<el-table-column label=\"创建时间\" min-width=\"180\">\r\n\t\t\t\t<template #default=\"scope\">\r\n\t\t\t\t\t{{ tools.rTime(scope.row.create_time) }}\r\n\t\t\t\t</template>\r\n\t\t\t</el-table-column>\r\n\t\t\t<el-table-column prop=\"name\" label=\"名称\" min-width=\"140\"></el-table-column>\r\n\t\t\t<el-table-column prop=\"task_name\" label=\"执行任务\" min-width=\"140\"></el-table-column>\r\n\t\t\t<el-table-column prop=\"env_name\" label=\"执行环境\" min-width=\"140\"></el-table-column>\r\n\t\t\t<el-table-column prop=\"rule\" label=\"执行规则\" min-width=\"140\"></el-table-column>\r\n\t\t\t<el-table-column label=\"是否开启\" min-width=\"120\">\r\n\t\t\t\t<template #default=\"scope\">\r\n\t\t\t\t\t<el-switch @change='switchCronStatus(scope.row)' v-model=\"scope.row.status\" active-color=\"#13ce66\"\r\n\t\t\t\t\t\tinactive-color=\"#b1b1b1\"></el-switch>\r\n\t\t\t\t</template>\r\n\t\t\t</el-table-column>\r\n\t\t\t<el-table-column label=\"操作\" min-width=\"100\">\r\n\t\t\t\t<template #default=\"scope\">\r\n\t\t\t\t\t<el-tooltip class=\"item\" effect=\"dark\" content=\"编辑\" placement=\"top\">\r\n\t\t\t\t\t\t<el-button @click='showUpdateCronDlg(scope.row)' type=\"primary\" size=\"small\" plain\r\n\t\t\t\t\t\t\ticon=\"Edit\"></el-button>\r\n\t\t\t\t\t</el-tooltip>\r\n\t\t\t\t\t<el-tooltip class=\"item\" effect=\"dark\" content=\"删除\" placement=\"top\">\r\n\t\t\t\t\t\t<el-button @click=\"delCron(scope.row.id)\" type=\"danger\" size=\"small\" plain\r\n\t\t\t\t\t\t\ticon=\"Delete\"></el-button>\r\n\t\t\t\t\t</el-tooltip>\r\n\t\t\t\t</template>\r\n\t\t\t</el-table-column>\r\n\t\t</el-table>\r\n\t</div>\r\n\t<!-- 创建or修改定时任务的窗口 -->\r\n\t<el-drawer v-model=\"state.dialogCron\" width=\"30%\">\r\n\t\t<template #header>\r\n\t\t\t<div style=\"text-align: center\" slot='title'>\r\n\t\t\t\t<span v-if=\"state.updateBtn\" style=\"font-size: 18px; font-weight: bold;\">修改定时执行任务</span>\r\n\t\t\t\t<span v-else style=\"font-size: 18px; font-weight: bold;\">创建定时执行任务</span>\r\n\t\t\t</div>\r\n\t\t</template>\r\n\r\n\t\t<el-form :model=\"state.cronTabData\" label-width=\"80px\">\r\n\t\t\t<el-form-item label=\"名称\">\r\n\t\t\t\t<el-input v-model=\"state.cronTabData.name\"></el-input>\r\n\t\t\t</el-form-item>\r\n\t\t\t<el-form-item label=\"测试环境\">\r\n\t\t\t\t<el-select v-model=\"state.cronTabData.env\" placeholder=\"请选择环境\" style=\"width: 100%;\">\r\n\t\t\t\t\t<el-option v-for=\"item in proStore.env_list\" :key=\"item.id\" :label=\"item.name\" :value=\"item.id\">\r\n\t\t\t\t\t</el-option>\r\n\t\t\t\t</el-select>\r\n\t\t\t</el-form-item>\r\n\t\t\t<el-form-item label=\"执行计划\">\r\n\t\t\t\t<el-select style=\"width: 100%;\" v-model=\"state.cronTabData.task\" placeholder=\"请选择\">\r\n\t\t\t\t\t<el-option v-for=\"item in proStore.taskList\" :key=\"item.id\" :label=\"item.name\" :value=\"item.id\">\r\n\t\t\t\t\t</el-option>\r\n\t\t\t\t</el-select>\r\n\t\t\t</el-form-item>\r\n\t\t\t<el-form-item label=\"是否开启\">\r\n\t\t\t\t<el-switch v-model=\"state.cronTabData.status\" active-color=\"#79d0ff\" inactive-color=\"#c3c3c3\"\r\n\t\t\t\t\tsize=\"small\">\r\n\t\t\t\t</el-switch>\r\n\t\t\t</el-form-item>\r\n\r\n\t\t\t<el-form-item label=\"定时规则\">\r\n\t\t\t\t<el-input v-model=\"state.cronTabData.rule\" placeholder=\"* * * * *\"></el-input>\r\n\t\t\t\t<el-row :gutter=\"20\">\r\n\t\t\t\t\t<el-col :span=\"14\">\r\n\t\t\t\t\t\t<h5>规则说明:</h5>\r\n\t\t\t\t\t\t<div style=\"font-size: 12px; line-height: 16px;\">* * * * * <span style=\"color:#909399\">分别表示\r\n\t\t\t\t\t\t\t\tminute hour week day\r\n\t\t\t\t\t\t\t\tmonth </span></div>\r\n\t\t\t\t\t\t<div style=\"font-size: 12px; line-height: 16px\">minute： <span\r\n\t\t\t\t\t\t\t\tstyle=\"color:#909399\">表示分钟，可以是从0到59之间的任何整数。</span></div>\r\n\t\t\t\t\t\t<div style=\"font-size: 12px; line-height: 16px\">hour：<span\r\n\t\t\t\t\t\t\t\tstyle=\"color:#909399\">表示小时，可以是从0到23之间的任何整数。</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div style=\"font-size: 12px; line-height: 16px\">week：<span\r\n\t\t\t\t\t\t\t\tstyle=\"color:#909399\">表示星期几，可以是从0到7之间的任何整数，这里的0或7代表星期日。</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div style=\"font-size: 12px; line-height: 16px\">day：<span\r\n\t\t\t\t\t\t\t\tstyle=\"color:#909399\">表示日期，可以是从1到31之间的任何整数。</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div style=\"font-size: 12px; line-height: 16px\">month：<span\r\n\t\t\t\t\t\t\t\tstyle=\"color:#909399\">表示月份，可以是从1到12之间的任何整数。</span>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t</el-col>\r\n\t\t\t\t\t<el-col :span=\"10\">\r\n\t\t\t\t\t\t<h5>配置案例：</h5>\r\n\t\t\t\t\t\t<div style=\"font-size: 12px;line-height: 16px\">5 * * * * : <span\r\n\t\t\t\t\t\t\t\tstyle=\"color:#909399\">每小时的第5分钟执行一次任务</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div style=\"font-size: 12px;line-height: 16px\">30 9 * * * : <span style=\"color:#909399\">每天上午的\r\n\t\t\t\t\t\t\t\t9:30\r\n\t\t\t\t\t\t\t\t执行一次任务</span></div>\r\n\t\t\t\t\t\t<div style=\"font-size: 12px;line-height: 16px\">30 9 * 8 * : <span\r\n\t\t\t\t\t\t\t\tstyle=\"color:#909399\">每月8号上午的9:30执行一次任务\r\n\t\t\t\t\t\t\t</span></div>\r\n\t\t\t\t\t\t<div style=\"font-size: 12px;line-height: 16px\">30 9 * 5 3 : <span style=\"color:#909399\">\r\n\t\t\t\t\t\t\t\t每年的3月5日9:30执行一次任务</span></div>\r\n\t\t\t\t\t\t<div style=\"font-size: 12px;line-height: 16px\">30 9 0 * * : <span\r\n\t\t\t\t\t\t\t\tstyle=\"color:#909399\">每星期日的上午9:30执行一次任务</span></div>\r\n\t\t\t\t\t</el-col>\r\n\t\t\t\t</el-row>\r\n\t\t\t</el-form-item>\r\n\t\t</el-form>\r\n\t\t<div slot=\"footer\" class=\"dialog-footer\" style=\"text-align: center;\">\r\n\t\t\t<el-button @click=\"state.dialogCron=false\" size=\"small\">取 消</el-button>\r\n\t\t\t<el-button v-if=\"state.updateBtn\" type=\"primary\" @click=\"UpdateCron()\" size=\"small\">提交修改</el-button>\r\n\t\t\t<el-button v-else type=\"primary\" @click=\"createCron()\" size=\"small\" plain>创 建</el-button>\r\n\t\t</div>\r\n\t</el-drawer>\r\n</template>\r\n\r\n<script setup>\r\nimport { ProjectStore } from '@/store/modoles/proStore'\r\nimport { ElNotification, ElMessageBox, ElMessage } from 'element-plus'\r\nimport api from '@/api/index'\r\nimport { ref, onMounted, reactive } from 'vue'\r\nimport tools from '@/utils/dateTools'\r\nconst proStore = ProjectStore()\r\nconst state = reactive({\r\n    // 定时任务列表\r\n    cronList: null,\r\n    dialogCron: false,\r\n    updateBtn: true,\r\n    // 添加定时任务\r\n    cronTabData: {\r\n        name: \"冒烟测试定期执行\",\r\n        rule: \"* * * * *\",\r\n        status: true,\r\n        task: null,\r\n        env: null\r\n    },\r\n})\r\n\r\n// 获取所有的定时任务\r\nasync function getAllCron() {\r\n    const response = await api.getCronJob(proStore.pro.id)\r\n    if (response.status === 200) {\r\n        state.cronList = response.data\r\n    }\r\n}\r\ngetAllCron()\r\n// 开启和关闭定时任务\r\nasync function switchCronStatus(cron) {\r\n    const response = await api.updateCronJob(cron.id, cron)\r\n    if (response.status === 200) {\r\n        if (cron.status == true) {\r\n            ElMessage({\r\n                type: 'success',\r\n                message: '定时运行已开启',\r\n                duration: 1000\r\n            })\r\n        } else {\r\n            ElMessage({\r\n                type: 'warning',\r\n                message: '定时运行已关闭',\r\n                duration: 1000\r\n            })\r\n        }\r\n    } else {\r\n        ElMessage({\r\n            type: 'error',\r\n            message: '修改状态失败',\r\n            duration: 1000\r\n        })\r\n    }\r\n}\r\n//删除定时任务\r\nfunction delCron(id) {\r\n    ElMessageBox.confirm('此操作将永久删除该定时任务, 是否继续?', '提示', {\r\n            confirmButtonText: '确定',\r\n            cancelButtonText: '取消',\r\n            type: 'warning'\r\n        })\r\n        .then(async () => {\r\n            // 删除定时任务\r\n            const response = await api.delCronJob(id)\r\n            if (response.status === 204) {\r\n                ElMessage({\r\n                    type: 'success',\r\n                    message: '删除成功!'\r\n                });\r\n                // 刷新页面定时任务\r\n                getAllCron()\r\n            }\r\n        })\r\n        .catch(() => {\r\n            ElMessage({\r\n                type: 'info',\r\n                message: '已取消删除'\r\n            });\r\n        });\r\n}\r\n\r\n// 点击添加按钮\r\nfunction clickAdd() {\r\n    state.dialogCron = true;\r\n    state.updateBtn = false;\r\n\r\n}\r\n// 添加定时任务\r\nasync function createCron() {\r\n    const params = {\r\n        project: proStore.pro.id,\r\n        ...state.cronTabData\r\n    }\r\n    const response = await api.addCronJob(params)\r\n    if (response.status === 201) {\r\n        ElMessage({\r\n            type: 'success',\r\n            message: '定时任务添加成功',\r\n            duration: 1000\r\n        })\r\n        state.dialogCron = false\r\n        getAllCron()\r\n    }\r\n}\r\n//显示修改定时任务的窗口\r\nfunction showUpdateCronDlg(cron) {\r\n    state.cronTabData = { ...cron }\r\n    state.dialogCron = true\r\n    // 显示修改按钮\r\n    state.updateBtn = true\r\n}\r\n// 修改定时任务\r\nasync function UpdateCron() {\r\n    const response = await api.updateCronJob(state.cronTabData.id, state.cronTabData)\r\n    if (response.status === 200) {\r\n        ElMessage({\r\n            type: 'success',\r\n            message: '修改成功',\r\n            duration: 1000\r\n        })\r\n        state.dialogCron = false\r\n        getAllCron()\r\n    }\r\n}\r\n\r\n</script>\r\n\r\n","import script from \"./CrontabView.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./CrontabView.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__"],"names":["ProjectStore","defineStore","state","pro","env_list","env","inetrfaces","sceneList","taskList","getters","interface1","this","filter","item","type","interface2","actions","getInterFaces","res","api","id","status","data","console","log","getScenes","getTestTask","getTestTaskList","persist","enabled","strategies","key","storage","localStorage","dateFtt","fmt","date","o","getMonth","getDate","getHours","getMinutes","getSeconds","Math","floor","getMilliseconds","k","test","replace","RegExp","$1","getFullYear","substr","length","rTime","Date","rDate","rhost","proStore","reactive","cronList","dialogCron","updateBtn","cronTabData","name","rule","task","async","getAllCron","response","getCronJob","switchCronStatus","cron","updateCronJob","ElMessage","message","duration","delCron","ElMessageBox","confirm","confirmButtonText","cancelButtonText","then","delCronJob","catch","clickAdd","createCron","params","project","addCronJob","showUpdateCronDlg","UpdateCron","__exports__"],"sourceRoot":""}
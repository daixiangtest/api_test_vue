{"version":3,"file":"js/about.d6ccb1ce.js","mappings":"8qBAwHA,MAAMA,EAAQC,EAKRC,GAAYC,EAAAA,EAAAA,KAAI,GAChBC,GAAUC,EAAAA,EAAAA,IAAS,CACjBC,QAAS,KACfC,UAAW,KACXC,KAAM,GACNC,KAAM,GACNC,OAAQ,QAGVC,eAAeC,IACbR,EAAQE,QAAUO,UAAUC,IAAIC,GAEhCX,EAAQK,KAAOT,EAAMgB,OACrB,MAAMC,QAAiBC,IAAIC,OAAOf,GACV,MAApBa,EAASP,SACZU,eAAe,CACdC,KAAM,UACNC,MAAO,UACPC,SAAU,MAEXrB,EAAUsB,OAAQ,EAEpB,C,ukLC7ID,MAAMC,GAA2B,OAAgB,EAAQ,CAAC,CAAC,YAAY,qBAEvE,O,scC4GA,MAAMC,GAAOC,EAAAA,EAAAA,MAEPC,GAAMvB,EAAAA,EAAAA,IAAS,CAEjBwB,OAAO,KAEPC,OAAO,KAEPC,eAAe,OAInBpB,eAAeqB,EAAcjB,GACzB,IAAIkB,QAAUf,EAAAA,EAAIgB,cAAcnB,GACf,MAAbkB,EAAIvB,SACJkB,EAAME,OAAOG,EAAIE,KAAK1B,KAEtBmB,EAAMG,eAAe,IAAIH,EAAME,OAAOM,SAE9C,CAEAzB,eAAe0B,EAAetB,GAC1B,IAAIkB,QAAUf,EAAAA,EAAIoB,cAAcvB,GACf,MAAbkB,EAAIvB,SACJkB,EAAMC,OAAOI,EAAIE,KAEzB,CAGA,SAASI,IACL,MAAMf,EAAM,CAACI,EAAME,OAAOU,IAAIZ,EAAME,OAAOW,QAAQb,EAAME,OAAOY,KAAKd,EAAME,OAAOa,OAC5EC,EAAM,CAAC,OAAO,OAAO,OAAO,QAC5BC,EAAIC,SAASC,cAAc,YACjCC,EAAAA,EAAMT,OAAOM,EAAIrB,EAAMoB,EAC3B,CAEA,SAASK,IACL,MAAMC,EAAM,CAAC,CAAC1B,MAAMI,EAAME,OAAOW,QAAQU,KAAK,MAAM,CAAC3B,MAAMI,EAAME,OAAOY,KAAKS,KAAK,MAAM,CAAC3B,MAAMI,EAAME,OAAOa,MAAMQ,KAAK,OACjHN,EAAIC,SAASC,cAAc,YACjCC,EAAAA,EAAMC,OAAOJ,EAAIK,EACrB,CAGA,MAAME,GAAcC,EAAAA,EAAAA,KAAS,IAClBzB,EAAME,OAAOM,QAAQkB,QAAO,SAASC,EAAIC,EAAMC,GAClD,MAAoB,YAAbF,EAAI3B,KACf,MAIE8B,GAAUL,EAAAA,EAAAA,KAAS,IACdzB,EAAME,OAAOM,QAAQkB,QAAO,SAASC,EAAIC,EAAMC,GAClD,MAAoB,SAAbF,EAAI3B,KACf,MAGE+B,GAAaN,EAAAA,EAAAA,KAAS,IACnBzB,EAAME,OAAOM,QAAQkB,QAAO,SAASC,EAAKC,EAAOI,GACvD,MAAqB,UAAdL,EAAI3B,KACZ,M,OAIFiC,EAAAA,EAAAA,KAAU,KAEN,MAAM9C,EAAGW,EAAOoC,OAAO/C,GACvBiB,EAAcjB,GACdsB,EAAetB,EAAG,KAGtBgD,EAAAA,EAAAA,KAAU,KACFjB,SAASC,cAAc,aAAaR,IACpCO,SAASC,cAAc,aAAaE,GAAQ,I,qqKCtLpD,MAAMxB,GAA2B,OAAgB,EAAQ,CAAC,CAAC,YAAY,qBAEvE,O","sources":["webpack://api_test_vue/./src/components/ResultView.vue","webpack://api_test_vue/./src/components/ResultView.vue?0cbe","webpack://api_test_vue/./src/views/home/testReport/reportView.vue","webpack://api_test_vue/./src/views/home/testReport/reportView.vue?d3d0"],"sourcesContent":["<template>\r\n    <!-- 运行结果展示 -->\r\n    <el-tabs type=\"border-card\">\r\n        <el-tab-pane label=\"响应体\">\r\n            <EditorCopmponts v-model=\"result.response_body\" height='200px' lang=\"json\" readOnly=True></EditorCopmponts>\r\n        </el-tab-pane>\r\n        <el-tab-pane label=\"响应头\">\r\n            <div v-for=\"(i,j) in result.response_header\">\r\n                <el-tag type=\"primary\">{{j}}</el-tag>\r\n                <span>:</span>\r\n                <el-tag type=\"success\">{{ i }}</el-tag>\r\n            </div>\r\n        </el-tab-pane>\r\n        <el-tab-pane label=\"请求信息\">\r\n            <el-collapse >\r\n                <el-collapse-item title=\"General\" name=\"1\">\r\n                    <template #icon=\"{ isActive }\">\r\n                    <span class=\"icon-ele\">\r\n                        {{ isActive ? '关闭' : '展开' }}\r\n                    </span>\r\n                    </template>\r\n                    <div>\r\n                        <el-tag type=\"success\">RequestMethod: </el-tag>\r\n                        <el-tag type=\"danger\">{{ result.method }}</el-tag>\r\n                    </div>\r\n                    <div>\r\n                        <el-tag type=\"success\">RequestUrl: </el-tag>\r\n                        <el-tag type=\"danger\">{{ result.url }}</el-tag>\r\n                    </div>\r\n                </el-collapse-item>\r\n                <el-collapse-item title=\"Request Header\" name=\"2\">\r\n                    <template #icon=\"{ isActive }\">\r\n                    <span class=\"icon-ele\">\r\n                        {{ isActive ? '关闭' : '展开' }}\r\n                    </span>\r\n                    </template>\r\n                    <div v-for=\"(i,j) in result.response_header\">\r\n                        <el-tag type=\"success\">{{j}}: </el-tag>\r\n                        <el-tag type=\"danger\">{{ i }}</el-tag>\r\n                    </div>\r\n                </el-collapse-item>\r\n                <el-collapse-item title=\"Request Body\" name=\"3\">\r\n                    <template #icon=\"{ isActive }\">\r\n                    <span class=\"icon-ele\">\r\n                        {{ isActive ? '关闭' : '展开' }}\r\n                    </span>\r\n                    </template>\r\n                    <div>\r\n                        <el-tag type=\"danger\">{{ result.requests_body }}</el-tag>\r\n                    </div>\r\n                </el-collapse-item>    \r\n            </el-collapse>\r\n        </el-tab-pane>\r\n        <el-tab-pane label=\"日志\">\r\n            <div style=\"overflow-x: auto;\">\r\n                <div v-for=\"log in result.log_data\" >\r\n                <el-tag v-if=\"log[0]==='INFO'\" type=\"success\">{{ log[0] }}:{{ log[1] }}</el-tag>\r\n                <el-tag v-else-if=\"log[0]==='DEBUG'\" type=\"info\">{{ log[0] }}:{{ log[1] }}</el-tag>\r\n                <el-tag v-else-if=\"log[0]==='ERROR'\" type=\"danger\">{{ log[0] }}:{{ log[1] }}</el-tag>\r\n                <el-tag v-else type=\"warning\">{{ log[0] }}:{{ log[1] }}</el-tag>\r\n            </div>\r\n            </div>\r\n            \r\n        </el-tab-pane>\r\n        <el-tab-pane disabled>\r\n            <!-- 使用插槽更改数据用# label键表示 -->\r\n            <template #label>\r\n                <span v-if=\"result.state==='成功'\" style=\"color: green;\">Assert:{{ result.state }}</span>\r\n                <span v-else-if=\"result.state==='错误'\" style=\"color: brown;\">Assert:{{ result.state }}</span>\r\n                <span v-else>Assert:{{ result.state }}</span>\r\n            </template>\r\n        </el-tab-pane>\r\n        <el-tab-pane disabled>\r\n            <!-- 使用插槽更改数据用# label键表示 -->\r\n            <template #label>\r\n                <span v-if=\"200 <= result.status_cede && result.status_cede <300\" style=\"color: green;\">code:{{ result.status_cede }}</span>\r\n                <span v-else-if=\"300 <= result.status_cede && result.status_cede < 400\" style=\"color: slategray;\">code:{{ result.status_cede }}</span>\r\n                <span v-else-if=\"400 <= result.status_cede && result.status_cede < 500\" style=\"color: yellow;\">code:{{ result.status_cede }}</span>\r\n                <span v-else-if=\"500 <= result.status_cede && result.status_cede < 600\" style=\"color: brown;\">code:{{ result.status_cede }}</span>\r\n                <span v-else>code:{{ result.status_cede }}</span>\r\n            </template>\r\n        </el-tab-pane>\r\n        <el-tab-pane disabled>\r\n            <!-- 使用插槽更改数据用# label键表示 -->\r\n            <template #label>\r\n                Time:{{ result.run_time }}\r\n            </template>\r\n        </el-tab-pane>\r\n    </el-tabs>\r\n    <!-- 提交bug按钮 -->\r\n    <div style=\"margin-top: 10px;width: 100%;text-align: center;\" v-if=\"result.state === '失败'\">\r\n\t\t<el-button v-show='!hideBtn' @click=\"addBugDlg = true\" plain size=\"small\">提交bug{{showbBtn}}</el-button>\r\n\t</div>\r\n\t<!-- 添加bug的弹框 -->\r\n\t<el-dialog title=\"提交bug\" v-model=\"addBugDlg\" width=\"30%\">\r\n\t\t<el-form :model=\"bugForm\">\r\n\t\t\t<el-form-item label=\"所属接口\">\r\n\t\t\t\t<el-select size=\"small\" v-model=\"bugForm.interface\" placeholder=\"bug对应的接口\" style=\"width: 100%;\">\r\n\t\t\t\t\t<el-option :label=\"iter.name + ' ' + iter.url\" :value=\"iter.id\" v-for=\"iter in interfaces\"\r\n\t\t\t\t\t\t:key=\"iter.id\"></el-option>\r\n\t\t\t\t</el-select>\r\n\t\t\t</el-form-item>\r\n\t\t\t<el-form-item label=\"bug描述\"><el-input :autosize=\"{ minRows: 3, maxRows: 4 }\" v-model=\"bugForm.desc\"\r\n\t\t\t\t\ttype=\"textarea\" autocomplete=\"off\"></el-input></el-form-item>\r\n\t\t</el-form>\r\n\t\t<template #footer>\r\n\t\t\t<div class=\"dialog-footer\">\r\n\t\t\t\t<el-button size=\"small\" @click=\"addBugDlg = false\">取 消</el-button>\r\n\t\t\t\t<el-button size=\"small\" type=\"primary\" plain @click=\"saveBug\">确 定</el-button>\r\n\t\t\t</div>\r\n\t\t</template>\r\n\t</el-dialog>\r\n</template>\r\n\r\n<script setup>\r\nimport { defineProps,ref,reactive} from 'vue';\r\nimport EditorCopmponts from '@/views/home/components/EditorCopmponts.vue';\r\n\r\n\r\n// 声明defineProps 对象通过里面的属性接收外部组件外部的参数\r\nconst props = defineProps({\r\n    result:{},\r\n    hideBtn: false,\r\n    // interID:null\r\n})\r\nconst addBugDlg = ref(false)\r\nconst bugForm = reactive({\r\n        project: null,\r\n\t\tinterface: null,\r\n\t\tdesc: '',\r\n\t\tinfo: '',\r\n\t\tstatus: '未处理'\r\n\t})\r\n// 保存bug的方法\r\nasync function saveBug() {\r\n\t\tbugForm.project = proStores.pro.id;\r\n        // bugForm.interface=props.interID\r\n\t\tbugForm.info = props.result;\r\n\t\tconst response = await api.addBug(bugForm);\r\n\t\tif (response.status === 201) {\r\n\t\t\tElNotification({\r\n\t\t\t\ttype: 'success',\r\n\t\t\t\ttitle: 'bug提交成功',\r\n\t\t\t\tduration: 1000\r\n\t\t\t});\r\n\t\t\taddBugDlg.value = false;\r\n\t\t}\r\n\t}\r\n\r\n</script>\r\n\r\n<style scoped>\r\n.icon-ele {\r\n  margin: 0 8px 0 auto;\r\n  color: #409eff;\r\n}\r\n</style>","import script from \"./ResultView.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ResultView.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./ResultView.vue?vue&type=style&index=0&id=520d49ff&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-520d49ff\"]])\n\nexport default __exports__","<template>\r\n    <el-row v-if=\"state.report\">\r\n\t\t<el-col :span=\"12\">\r\n\t\t\t<el-scrollbar height=\"calc(100vh - 65px)\">\r\n\t\t\t\t<el-card v-if='state.record'>\r\n\t\t\t\t\t<div class=\"report_title\">\r\n\t\t\t\t\t\t<i class=\"el-icon-s-marketing\"></i>\r\n\t\t\t\t\t\t测试报告\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<el-descriptions :column=\"5\" border title=\"执行信息\" direction=\"vertical\">\r\n\t\t\t\t\t\t<el-descriptions-item label=\"执行时间\">{{ tools.rTime(state.record.create_time) }}</el-descriptions-item>\r\n\t\t\t\t\t\t<el-descriptions-item label=\"执行任务\">{{ state.record.task }}</el-descriptions-item>\r\n\t\t\t\t\t\t<el-descriptions-item label=\"测试环境\">{{ state.record.env }}</el-descriptions-item>\r\n\t\t\t\t\t\t<el-descriptions-item label=\"通过率\">{{ state.record.pass_rate*100 + '%' }}</el-descriptions-item>\r\n\t\t\t\t\t</el-descriptions>\r\n\t\t\t\t</el-card>\r\n\t\t\t\t<el-card body-style=\"padding:5px\">\r\n\t\t\t\t\t<el-row :gutter=\"5\">\r\n\t\t\t\t\t\t<!-- 用例信息图表 -->\r\n\t\t\t\t\t\t<el-col :span=\"14\">\r\n\t\t\t\t\t\t\t<div class=\"chartBox\" id=\"chart11\"></div>\r\n\t\t\t\t\t\t</el-col>\r\n\t\t\t\t\t\t<!-- 通过率图表 -->\r\n\t\t\t\t\t\t<el-col :span=\"10\">\r\n\t\t\t\t\t\t\t<div class=\"chartBox\" id=\"chart22\"></div>\r\n\t\t\t\t\t\t</el-col>\r\n\t\t\t\t\t</el-row>\r\n\t\t\t\t</el-card>\r\n\t\t\t\t<el-card>\r\n\t\t\t\t\t<el-descriptions :column=\"4\" border title=\"测试业务流统计\" direction=\"vertical\">\r\n\t\t\t\t\t\t<el-descriptions-item label=\"业务流总数\">{{ state.report.results.length }}</el-descriptions-item>\r\n\t\t\t\t\t\t<el-descriptions-item label=\"通过业务流\">{{ successscent.length }}</el-descriptions-item>\r\n\t\t\t\t\t\t<el-descriptions-item label=\"失败业务流\">{{ failscent.length }}</el-descriptions-item>\r\n\t\t\t\t\t\t<el-descriptions-item label=\"错误业务流\">{{ errorscent.length }}</el-descriptions-item>\r\n\t\t\t\t\t</el-descriptions>\r\n\t\t\t\t</el-card>\r\n\t\t\t\t<el-card>\r\n\t\t\t\t\t<b style=\"line-height: 30px;\">未通过业务流</b>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<el-button plain size=\"small\" @click=\"showScentDatas = [su]\" type=\"danger\"\r\n\t\t\t\t\t\t\tv-for=\"su in errorscent\">{{ su.name }}</el-button>\r\n\t\t\t\t\t\t<el-button plain size=\"small\" @click=\"showScentDatas = [su]\" type=\"warning\"\r\n\t\t\t\t\t\t\tv-for=\"su in failscent\">{{ su.name }}</el-button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</el-card>\r\n\t\t\t\t<el-card>\r\n\t\t\t\t\t<b style=\"line-height: 30px;\">通过业务流</b>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<el-button plain size=\"small\" @click=\"showScentDatas = [su]\" type=\"success\"\r\n\t\t\t\t\t\t\tv-for=\"su in successscent\">{{ su.name }}</el-button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</el-card>\r\n\t\t\t</el-scrollbar>\r\n\t\t</el-col>\r\n\r\n\t\t<el-col :span=\"12\">\r\n\t\t\t<div>\r\n\t\t\t\t<div style=\"margin: 5px;\">\r\n\t\t\t\t\t<el-button size=\"small\" type=\"primary\" plain\r\n\t\t\t\t\t\t@click=\"state.showScentDatas = { ...state.report.results }\">所有业务流</el-button>\r\n\t\t\t\t\t<el-button size=\"small\" type=\"success\" plain\r\n\t\t\t\t\t\t@click=\"state.showScentDatas = successscent\">成功业务流</el-button>\r\n\t\t\t\t\t<el-button size=\"small\" type=\"warning\" plain @click=\"state.showScentDatas = failscent\">失败业务流</el-button>\r\n\t\t\t\t\t<el-button size=\"small\" type=\"danger\" plain @click=\"state.showScentDatas = errorscent\">错误业务流</el-button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<el-scrollbar height=\"calc(100vh - 117px)\">\r\n\t\t\t\t\t<div class=\"right_box\">\r\n\t\t\t\t\t\t<el-card v-for=\"(scent, index) in state.showScentDatas\" :key=\"index\">\r\n\t\t\t\t\t\t\t<div class=\"title\" v-if=\"scent.state == 'success'\">\r\n\t\t\t\t\t\t\t\t<i class=\"el-icon-upload\"></i>\r\n\t\t\t\t\t\t\t\t{{ '测试业务流 : ' + scent.name + '【通过】' }}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div class=\"title\" v-else-if=\"scent.state == 'fail'\" style=\"color: coral;\">\r\n\t\t\t\t\t\t\t\t<i class=\"el-icon-upload\"></i>\r\n\t\t\t\t\t\t\t\t{{ '测试业务流 : ' + scent.name + '【失败】' }}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div class=\"title\" v-else style=\"color: red;\">\r\n\t\t\t\t\t\t\t\t<i class=\"el-icon-upload\"></i>\r\n\t\t\t\t\t\t\t\t{{ '测试业务流 : ' + scent.name + '【错误】' }}\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t<el-table :data=\"scent.cases\" style=\"width: 100%;\" class=\"result\" :show-header=\"false\">\r\n\t\t\t\t\t\t\t\t<el-table-column type=\"expand\">\r\n\t\t\t\t\t\t\t\t\t<template #default=\"scope\">\r\n\t\t\t\t\t\t\t\t\t\t<Result :result=\"scope.row\"></Result>\r\n\t\t\t\t\t\t\t\t\t</template>\r\n\t\t\t\t\t\t\t\t</el-table-column>\r\n\t\t\t\t\t\t\t\t<el-table-column :show-overflow-tooltip=\"true\" label=\"用例名称\" prop=\"name\"\r\n\t\t\t\t\t\t\t\t\tmin-width=\"100px\"></el-table-column>\r\n\t\t\t\t\t\t\t\t<el-table-column label=\"请求方法\" prop=\"method\" min-width=\"40px\"></el-table-column>\r\n\t\t\t\t\t\t\t\t<el-table-column label=\"状态码\" prop=\"status_cede\" min-width=\"40px\"></el-table-column>\r\n\t\t\t\t\t\t\t\t<el-table-column label=\"断言结果\" prop=\"state\" min-width=\"40px\">\r\n\t\t\t\t\t\t\t\t\t<template #default=\"scope\">\r\n\t\t\t\t\t\t\t\t\t\t<span v-if=\"scope.row.state == '成功'\" style=\"color: #00AA7F;\">成功</span>\r\n\t\t\t\t\t\t\t\t\t\t<span v-else-if=\"scope.row.state == '失败'\" style=\"color: #ffaa00\">失败</span>\r\n\t\t\t\t\t\t\t\t\t\t<span v-else style=\"color:#F56C6C\">错误</span>\r\n\t\t\t\t\t\t\t\t\t</template>\r\n\t\t\t\t\t\t\t\t</el-table-column>\r\n\t\t\t\t\t\t\t</el-table>\r\n\t\t\t\t\t\t</el-card>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</el-scrollbar>\r\n\t\t\t</div>\r\n\t\t</el-col>\r\n\r\n\t</el-row>\r\n</template>\r\n\r\n<script setup>\r\nimport chart from '@/utils/chart'\r\nimport Result from '@/components/ResultView.vue';\r\nimport tools from '@/utils/dateTools'\r\nimport api from '@/api/index'\r\nimport { reactive, ref, onMounted, onUpdated, computed } from 'vue'\r\nimport { useRoute } from 'vue-router'\r\n\r\nconst router=useRoute()\r\n\r\nconst state=reactive({\r\n    // record 运行记录\r\n    record:null,\r\n    // 报告信息\r\n    report:null,\r\n    // 测试业务流数据\r\n    showScentDatas:null\r\n})\r\n\r\n// 获取测试报告数据\r\nasync function getReportInfo(id) {\r\n    var res=await api.getTestReport(id)\r\n    if (res.status===200){\r\n        state.report=res.data.info\r\n        // 为测试业务流的数据复制\r\n        state.showScentDatas={...state.report.results}\r\n    }\r\n}\r\n// 获取测试执行记录\r\nasync function getRecordsInfo(id) {\r\n    var res=await api.getTestRecord(id)\r\n    if (res.status===200){\r\n        state.record=res.data\r\n    }\r\n}\r\n\r\n// 执行信息图表\r\nfunction chart1(){\r\n    const value=[state.report.all,state.report.success,state.report.fail,state.report.error];\r\n    const label=['用例总数','通过用例','失败用例','错误用例'];\r\n    const elm=document.querySelector('#chart11')\r\n    chart.chart1(elm,value,label)\r\n}\r\n// 通过率图标展示\r\nfunction chart2(){\r\n    const datas=[{value:state.report.success,name:'通过'},{value:state.report.fail,name:'失败'},{value:state.report.error,name:'错误'}]\r\n    const elm=document.querySelector('#chart22')\r\n    chart.chart2(elm,datas)\r\n}\r\n\r\n// 获取执行成功的用例数据\r\nconst successscent= computed(() =>{\r\n    return state.report.results.filter(function(val,index,arry){\r\n        return val.state ==='success'\r\n    })\r\n})\r\n\r\n// 获取执行失败的用例数据\r\nconst failscent=computed(() =>{\r\n    return state.report.results.filter(function(val,index,arry){\r\n        return val.state ==='fail'\r\n    })\r\n})\r\n// 获取执行错误的用例数据\r\nconst errorscent = computed(() => {\r\n\t\treturn state.report.results.filter(function(val, index, array) {\r\n\t\t\treturn val.state === 'error';\r\n\t\t})\r\n\t})\r\n\r\n// 组件挂载执行函数\r\nonMounted(() => {\r\n    // 获取路由的id\r\n    const id=router.params.id\r\n    getReportInfo(id)\r\n    getRecordsInfo(id)\r\n})\r\n\r\nonUpdated(() => {\r\n    if (document.querySelector('#chart11')) chart1();\r\n    if (document.querySelector('#chart22')) chart2();\r\n})\r\n</script>\r\n\r\n<style scoped lang=\"scss\">\r\n\t.right_box .title {\r\n\t\tfont: bold 18px/20px 'microsoft yahei';\r\n\t\ttext-indent: 10px;\r\n\t\tcolor: #00aaff;\r\n\t}\r\n\r\n\t.el-card {\r\n\t\tmargin: 5px;\r\n\t}\r\n\r\n\t.report_title {\r\n\t\tfont: bold 24px/50px 'microsoft yahei';\r\n\t\ttext-align: center;\r\n\t\tcolor: #00aaff;\r\n\t}\r\n\r\n\t/* 图标盒子样式 */\r\n\t.chartBox {\r\n\t\theight: 200px;\r\n\t\tbackground: rgba(52, 52, 53, 0.1);\r\n\t}\r\n\r\n\t/* 业务流标签样式 */\r\n\t.el-tag {\r\n\t\tmargin: 5px;\r\n\t\tcursor: pointer;\r\n\t}\r\n\r\n\r\n</style>","import script from \"./reportView.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./reportView.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./reportView.vue?vue&type=style&index=0&id=47458821&scoped=true&lang=scss\"\n\nimport exportComponent from \"../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-47458821\"]])\n\nexport default __exports__"],"names":["props","__props","addBugDlg","ref","bugForm","reactive","project","interface","desc","info","status","async","saveBug","proStores","pro","id","result","response","api","addBug","ElNotification","type","title","duration","value","__exports__","router","useRoute","state","record","report","showScentDatas","getReportInfo","res","getTestReport","data","results","getRecordsInfo","getTestRecord","chart1","all","success","fail","error","label","elm","document","querySelector","chart","chart2","datas","name","successscent","computed","filter","val","index","arry","failscent","errorscent","array","onMounted","params","onUpdated"],"sourceRoot":""}
{"version":3,"file":"js/396.6e2b64ac.js","mappings":"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","sources":["webpack://api_test_vue/./src/store/modoles/proStore.js","webpack://api_test_vue/./src/views/home/testEnv/TestEnvView.vue","webpack://api_test_vue/./src/views/home/testEnv/TestEnvView.vue?4715"],"sourcesContent":["import {defineStore} from 'pinia'\r\nimport api from '@/api/index'\r\n\r\nexport const ProjectStore=defineStore('proStore',\r\n    {   \r\n        // 全局数据存储\r\n        state: () => {\r\n            return {\r\n                // 项目信息\r\n                pro:{},\r\n                // 环境列表\r\n                env_list:[],\r\n                // 选择的测试环境\r\n                env:0,\r\n                // 保存接口列表\r\n                inetrfaces:[],\r\n                // 测试业务流列表\r\n                sceneList:[],\r\n                // 测试计划列表\r\n                taskList: []\r\n            }\r\n\r\n        },\r\n        getters:{\r\n            // 过滤出项目接口\r\n            interface1(){\r\n                return this.inetrfaces.filter((item) => {\r\n                    return item.type==='1'\r\n                })\r\n            },\r\n            // 过滤出第三方接口\r\n            interface2(){\r\n                return this.inetrfaces.filter((item) => {\r\n                    return item.type==='2'\r\n                })\r\n            }\r\n        },\r\n        // 定义全局的方法\r\n        actions:{\r\n            // 获取接口列表\r\n            async getInterFaces(){\r\n                const res=await api.getInterFaces(this.pro.id)\r\n                if (res.status===200){\r\n                    this.inetrfaces=res.data\r\n                }else{\r\n                    console.log(`获取项目id${this.pro.id}失败`)\r\n                }\r\n            },\r\n            // 获取测试业务流列表\r\n            async getScenes(){\r\n                const res=await api.getScenes(this.pro.id)\r\n                if (res.status===200){\r\n                    this.sceneList=res.data\r\n                }\r\n            },\r\n            // 获取测试计划\r\n            async getTestTask(){\r\n                const res=await api.getTestTaskList(this.pro.id)\r\n                if (res.status===200){\r\n                    this.taskList=res.data\r\n                }\r\n            }\r\n        },\r\n        persist: {\r\n            enabled:true,\r\n            strategies:{\r\n                key:\"users\",\r\n                storage:localStorage\r\n            }\r\n        }\r\n    },\r\n    \r\n  \r\n)","<template>\r\n    <div class=\"main_box\">\r\n        <div class=\"card left_box\">\r\n            <!-- 左侧标题栏 -->\r\n            <div class=\"title_box\">\r\n                <img src=\"@/assets/icons/data.png\" width=\"25\">\r\n                <div class=\"name\">测试环境</div>\r\n                <el-button type=\"primary\" text size=\"small\" icon=\"CirclePlus\" @click=\"addEnv\">添加环境</el-button>\r\n            </div>\r\n            <!-- 环境展示栏 -->\r\n            <el-menu :default-active=\"env_info.id\" class=\"el-menu-vertical-demo\" >\r\n                    <el-menu-item :index=\"env.id\" v-for=\"env ,index in list_pro\" v-bind:key=\"index\" @click=\"selectEnv(env)\">\r\n                        <el-icon><img src=\"@/assets/icons/data.png\" width=\"15px\"></el-icon>\r\n                        <span>{{ env.name }}</span>\r\n                    </el-menu-item>\r\n            </el-menu>\r\n            <!-- 添加项目参数的弹窗 -->\r\n            <el-dialog v-model=\"isShow\" title=\"添加项目环境\" width=\"500\">\r\n                <el-form :model=\"body\" :rules=\"rulesEnv\" ref=\"data\">\r\n                <el-form-item label=\"环境名称\" :label-width=\"formLabelWidth\" prop=\"name\">\r\n                    <el-input v-model=\"body.name\" autocomplete=\"on\" />\r\n                </el-form-item>\r\n                <el-form-item label=\"环境域名\" :label-width=\"formLabelWidth\" prop=\"host\">\r\n                    <el-input v-model=\"body.host\" autocomplete=\"on\" />\r\n                </el-form-item>\r\n                </el-form>\r\n                <template #footer>\r\n                <div class=\"dialog-footer\">\r\n                    <el-button @click=\"cencelBox\">\r\n                        取消\r\n                    </el-button>\r\n                    <el-button type=\"primary\" @click=\"newEnv(data)\">\r\n                        确认\r\n                    </el-button>\r\n                </div>\r\n                </template>\r\n            </el-dialog>\r\n        </div>\r\n        <!-- 中间编辑栏 -->\r\n        <div class=\"card center_box\">\r\n            <el-divider content-position=\"left\">基本信息</el-divider>\r\n            <el-input v-model=\"env_name\" style=\"max-width: 600px\" placeholder=\"环境名称\">\r\n                <template #prepend>环境名称</template>\r\n            </el-input>\r\n            <el-input v-model=\"env_host\" style=\"max-width: 600px; margin-top: 5px;\" placeholder=\"Http://\"> \r\n                <template #prepend>全局域名</template>\r\n            </el-input>\r\n            <el-divider content-position=\"left\">请求头\\数据库</el-divider>\r\n            <el-tabs  class=\"demo-tabs\" @tab-click=\"handleClick\">\r\n                <el-tab-pane label=\"全局Header\" >\r\n                    <EditorCopmponts v-model=\"env_header\" height='200px' lang=\"json\"></EditorCopmponts>\r\n                </el-tab-pane>\r\n                <el-tab-pane label=\"DB配置\" >\r\n                    <EditorCopmponts v-model=\"env_db\" height='200px' lang=\"json\"></EditorCopmponts>\r\n                </el-tab-pane>  \r\n            </el-tabs>\r\n            <el-divider content-position=\"left\">环境变量</el-divider>\r\n            <el-tabs  class=\"demo-tabs\" @tab-click=\"handleClick\">\r\n                <el-tab-pane label=\"全局变量\" >\r\n                    <EditorCopmponts v-model=\"env_global_variable\"  lang=\"json\"></EditorCopmponts>\r\n                </el-tab-pane>\r\n                <el-tab-pane label=\"局部变量\" >\r\n                    <EditorCopmponts v-model=\"env_debug_global_variable\"  lang=\"json\"></EditorCopmponts>\r\n                </el-tab-pane>\r\n                \r\n                <el-affix :offset=\"40\" position=\"bottom\">\r\n                    <div class=\"button_box\">\r\n                    <el-button type=\"primary\" plain size=\"small\" @click=\"saveEnv\">保存编辑</el-button>\r\n                    <el-button type=\"success\" plain size=\"small\" @click=\"copyEnv\">复制环境</el-button>\r\n                    <el-button type=\"danger\" plain size=\"small\" @click=\"delEnv()\">删除环境</el-button>\r\n                </div>\r\n                </el-affix>\r\n            </el-tabs>\r\n            \r\n        </div>\r\n        <!-- 右侧编辑栏 -->\r\n        <div class=\"card right_box\">\r\n            <el-divider content-position=\"left\">全局工具函数</el-divider>\r\n            <EditorCopmponts v-model=\"env_global_func\"  lang=\"python\" height=\"calc(100% - 50px)\"></EditorCopmponts>\r\n        </div>\r\n    </div>\r\n\r\n    \r\n    \r\n</template>\r\n\r\n\r\n<script setup>\r\nimport api from '@/api/index'\r\nimport {ref,onMounted,reactive} from 'vue'\r\nimport {ProjectStore} from '@/store/modoles/proStore'\r\nimport EditorCopmponts from '../components/EditorCopmponts.vue';\r\nimport { ElMessage, ElMessageBox } from 'element-plus'\r\n\r\n\r\n\r\n// 获取项目所有的环境信息\r\nvar list_pro=ref([])\r\nvar pro_store=ProjectStore()\r\nasync function getListPro(){\r\n    const pro_id=pro_store.pro.id\r\n    const res=await api.getTestEnvList(pro_id)\r\n    if (res.status===200){\r\n        list_pro.value=res.data\r\n        // 全局保存测试环境列表\r\n        pro_store.env_list=res.data\r\n    }\r\n}\r\n// 添加项目环境的弹窗\r\nconst isShow = ref(false)\r\nconst body = reactive({\r\n  name: '',\r\n  host: '',\r\n  project:''\r\n})\r\n\r\nfunction cencelBox(){\r\n    isShow.value=false\r\n    body.name=''\r\n    body.host=''\r\n}\r\n\r\nfunction addEnv(){\r\n    isShow.value=true\r\n}\r\nconst data=ref()\r\nfunction newEnv(data){\r\n    data.validate(async function(res1){\r\n        // 校验失败直接返回结果\r\n        if (!res1) return\r\n        body.project=pro_store.pro.id\r\n        var res= await api.addTestEnv(body)\r\n        if (res.status===201){\r\n            ElMessage({\r\n                type: 'success',\r\n                message: '添加成功',\r\n                })\r\n            getListPro()\r\n            isShow.value=false\r\n            body.name=''\r\n            body.host=''\r\n        }\r\n        else{\r\n            ElMessage({\r\n                type: 'error',\r\n                message: '添加失败',\r\n                })\r\n        }\r\n        })\r\n    }\r\n// 输入框架校验规则\r\nconst rulesEnv = reactive({\r\n        name:[{ required: true, message: '项目名称不能为空', trigger: 'blur' }],\r\n        host:[{ required: true, message: '环境域名不能为空', trigger: 'blur' },\r\n        {  \r\n            required: true,  \r\n            pattern: /^(https?:\\/\\/[^\\s]+)$/,   \r\n            message: 'URL格式不正确，必须以http://或https://开头',   \r\n            trigger: ['blur', 'change']   \r\n        }  ,]\r\n    })\r\n\r\n\r\n// 页面数据信息\r\nvar env_name=ref('')\r\nvar env_host=ref('')\r\nvar env_header=ref('{}')\r\nvar env_db=ref('[]')\r\nvar env_global_variable=ref('{}')\r\nvar env_debug_global_variable=ref('{}')\r\nvar env_global_func=ref('')\r\n// 展示环境信息\r\n// envName.value=\"ceshi\"\r\nvar env_info=ref({id:1})\r\nfunction selectEnv(env){\r\n    env_info.value=env\r\n    env_name.value=env.name\r\n    env_host.value=env.host\r\n    env_header.value=JSON.stringify(env.headers,0,4) || '{}'\r\n    env_db.value=JSON.stringify(env.db,0,4) || '[]'\r\n    env_global_variable.value=JSON.stringify(env.global_variable,0,4) || '{}'\r\n    env_debug_global_variable.value=JSON.stringify(env.debug_global_variable,0,4) || '{}'\r\n    env_global_func.value=env.global_func\r\n}\r\n// 通过onMounted 生命周期钩子函数来实现组件挂在数据完毕后设置一个默认的环境\r\nonMounted (async() =>{\r\n    await getListPro()\r\n    if (list_pro.value.length>0){\r\n        selectEnv(list_pro.value[0])\r\n    }\r\n})\r\n\r\n// 环境的增删改操作\r\nfunction delEnv(){\r\n    ElMessageBox.confirm(\r\n    '项目环境删除后数据不可恢复，确认删除吗？',\r\n    '警告',\r\n    {\r\n      confirmButtonText: '确认',\r\n      cancelButtonText: '取消',\r\n      type: 'warning',\r\n    }\r\n  )\r\n    .then(async() => {\r\n        var res=await api.delTestEnv(env_info.value.id)\r\n        if (res.status===204){\r\n            getListPro()\r\n            ElMessage({\r\n            type: 'success',\r\n            message: '删除成功',\r\n            })\r\n        if (list_pro.value.length>0){\r\n            selectEnv(list_pro.value[0])}\r\n        }     \r\n    })\r\n    .catch(() => {\r\n      ElMessage({\r\n        type: 'info',\r\n        message: '已取消',\r\n      })\r\n    })\r\n}\r\n\r\nasync function copyEnv(){\r\n    var body=env_info.value\r\n    body.name=env_info.value.name+\"copy\"\r\n    var res= await api.addTestEnv(body)\r\n    if (res.status===201){\r\n        ElMessage({\r\n            type: 'success',\r\n            message: '复制成功',\r\n            })\r\n        getListPro()\r\n    }else{\r\n        ElMessage({\r\n            type: 'error',\r\n            message: '复制失败',\r\n            })\r\n    }\r\n}   \r\n\r\nasync function saveEnv() {\r\n    var env_id =env_info.value.id\r\n    var body={\r\n        name:env_name.value,\r\n        host:env_host.value,\r\n\r\n        headers:JSON.parse(env_header.value),\r\n        db:JSON.parse(env_db.value),\r\n        global_variable:JSON.parse(env_global_variable.value),\r\n        debug_global_variable:JSON.parse(env_debug_global_variable.value),\r\n        global_func:env_global_func.value\r\n    }\r\n    var res = await api.updateTestEnv(env_id,body)\r\n    if (res.status ===200){\r\n        ElMessage({\r\n            type: 'success',\r\n            message: '更新成功',\r\n            })\r\n        getListPro()\r\n    }else{\r\n        ElMessage({\r\n            type: 'error',\r\n            message: '更新失败',\r\n            })\r\n        getListPro()\r\n    }\r\n    \r\n}\r\n\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.main_box{\r\n    height: calc(100% - 42px);\r\n    width: 100%;\r\n    display: flex;\r\n    .left_box{\r\n        width: 200px;\r\n        .title_box{\r\n            display: flex;\r\n            height: 40px;\r\n            align-items: center;\r\n            justify-content: center;\r\n            border:solid 1px #615f5f;\r\n            .name{\r\n                font-weight: bold;\r\n                font-size: 15px;\r\n                margin: 0 5px;\r\n            }\r\n        }\r\n    }\r\n\r\n    .center_box{\r\n        width: 500px;\r\n        .button_box{\r\n            text-align: center;\r\n        }\r\n    }\r\n\r\n    .right_box{\r\n        flex: 1;\r\n    }\r\n}\r\n\r\n</style>","import script from \"./TestEnvView.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./TestEnvView.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./TestEnvView.vue?vue&type=style&index=0&id=3d03716a&lang=scss&scoped=true\"\n\nimport exportComponent from \"../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-3d03716a\"]])\n\nexport default __exports__"],"names":["ProjectStore","defineStore","state","pro","env_list","env","inetrfaces","sceneList","taskList","getters","interface1","this","filter","item","type","interface2","actions","getInterFaces","res","api","id","status","data","console","log","getScenes","getTestTask","getTestTaskList","persist","enabled","strategies","key","storage","localStorage","list_pro","ref","pro_store","async","getListPro","pro_id","getTestEnvList","value","isShow","body","reactive","name","host","project","cencelBox","addEnv","newEnv","validate","res1","addTestEnv","ElMessage","message","rulesEnv","required","trigger","pattern","env_name","env_host","env_header","env_db","env_global_variable","env_debug_global_variable","env_global_func","env_info","selectEnv","JSON","stringify","headers","db","global_variable","debug_global_variable","global_func","delEnv","ElMessageBox","confirm","confirmButtonText","cancelButtonText","then","delTestEnv","length","catch","copyEnv","saveEnv","env_id","parse","updateTestEnv","onMounted","__exports__"],"sourceRoot":""}
{"version":3,"file":"js/166.df4bfd29.js","mappings":"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","sources":["webpack://api_test_vue/./src/store/modoles/proStore.js","webpack://api_test_vue/./src/components/FormData.vue","webpack://api_test_vue/./src/components/FormData.vue?e13c","webpack://api_test_vue/./src/components/ResultView.vue","webpack://api_test_vue/./src/components/ResultView.vue?0cbe"],"sourcesContent":["import {defineStore} from 'pinia'\r\nimport api from '@/api/index'\r\n\r\nexport const ProjectStore=defineStore('proStore',\r\n    {   \r\n        // 全局数据存储\r\n        state: () => {\r\n            return {\r\n                // 项目信息\r\n                pro:{},\r\n                // 环境列表\r\n                env_list:[],\r\n                // 选择的测试环境\r\n                env:0,\r\n                // 保存接口列表\r\n                inetrfaces:[],\r\n                // 测试业务流列表\r\n                sceneList:[],\r\n                // 测试计划列表\r\n                taskList: []\r\n            }\r\n\r\n        },\r\n        getters:{\r\n            // 过滤出项目接口\r\n            interface1(){\r\n                return this.inetrfaces.filter((item) => {\r\n                    return item.type==='1'\r\n                })\r\n            },\r\n            // 过滤出第三方接口\r\n            interface2(){\r\n                return this.inetrfaces.filter((item) => {\r\n                    return item.type==='2'\r\n                })\r\n            }\r\n        },\r\n        // 定义全局的方法\r\n        actions:{\r\n            // 获取接口列表\r\n            async getInterFaces(){\r\n                const res=await api.getInterFaces(this.pro.id)\r\n                if (res.status===200){\r\n                    this.inetrfaces=res.data\r\n                }else{\r\n                    console.log(`获取项目id${this.pro.id}失败`)\r\n                }\r\n            },\r\n            // 获取测试业务流列表\r\n            async getScenes(){\r\n                const res=await api.getScenes(this.pro.id)\r\n                if (res.status===200){\r\n                    this.sceneList=res.data\r\n                }\r\n            },\r\n            // 获取测试计划\r\n            async getTestTask(){\r\n                const res=await api.getTestTaskList(this.pro.id)\r\n                if (res.status===200){\r\n                    this.taskList=res.data\r\n                }\r\n            }\r\n        },\r\n        persist: {\r\n            enabled:true,\r\n            strategies:{\r\n                key:\"users\",\r\n                storage:localStorage\r\n            }\r\n        }\r\n    },\r\n    \r\n  \r\n)","<template>\r\n\t<el-row :gutter=\"40\">\r\n\t\t<el-col :span=\"15\">\r\n\t\t\t<el-row v-for=\"(item, index) in params\" :key=\"index\" :gutter=\"5\" style=\"margin-top: 5px;\">\r\n\t\t\t\t<el-col :span=\"5\"><el-input size=\"small\" v-model=\"item[0]\" placeholder=\"参数名\" clearable /></el-col>\r\n\t\t\t\t<el-col :span=\"4\">\r\n\t\t\t\t\t<el-select @change=\"seleType($event, index)\" v-model=\"paramsType[index]\" placeholder=\"参数类型\"\r\n\t\t\t\t\t\tsize=\"small\" style=\"width: 100%;\">\r\n\t\t\t\t\t\t<el-option label=\"Text\" value=\"text\" />\r\n\t\t\t\t\t\t<el-option label=\"File\" value=\"file\" />\r\n\t\t\t\t\t</el-select>\r\n\t\t\t\t</el-col>\r\n\t\t\t\t<el-col :span=\"11\">\r\n\t\t\t\t\t<!-- 文字输入框 -->\r\n\t\t\t\t\t<el-input v-if=\"paramsType[index] == 'text'\" v-model=\"item[1]\" placeholder=\"参数值\" size=\"small\"\r\n\t\t\t\t\t\tclearable />\r\n\t\t\t\t\t<el-select v-else @change=\"seleFile($event, index)\" v-model=\"item[1][0]\" size=\"small\"\r\n\t\t\t\t\t\tplaceholder=\"选择已有文件\" style=\"width: 100%;\">\r\n\t\t\t\t\t\t<el-option v-for=\"item in files\" :label=\"item.info[0]\" :value=\"item.info[0]\" />\r\n\t\t\t\t\t</el-select>\r\n\t\t\t\t</el-col>\r\n\t\t\t\t<el-col :span=\"4\"><el-button icon=\"Delete\" @click=\"params.splice(index, 1)\" size=\"small\"\r\n\t\t\t\t\t\ttype=\"danger\" plain></el-button></el-col>\r\n\t\t\t</el-row>\r\n\t\t\t<el-button style=\"margin-top: 10px;\" icon=\"Plus\" @click=\"params.push(['', ''])\" size=\"small\"\r\n\t\t\t\ttype=\"primary\" plain></el-button>\r\n\t\t</el-col>\r\n\t\t<el-col :span=\"9\">\r\n\t\t\t<el-card>\r\n\t\t\t\t<el-upload class=\"upload-demo\" :action=\"api.uploadFile.url\" :headers=\"updateHead()\" :show-file-list=\"false\"\r\n\t\t\t\t\t:on-success=\"uploadSuccess\" :on-error=\"uploadError\" name=\"file\">\r\n\t\t\t\t\t<el-button type=\"primary\" plain size=\"small\">上传文件</el-button>\r\n\t\t\t\t</el-upload>\r\n\t\t\t\t<el-table :data=\"files\" style=\"width: 100%\" size=\"small\" height=\"200px\">\r\n\t\t\t\t\t<el-table-column label=\"已有文件\">\r\n\t\t\t\t\t\t<template #default=\"scope\">\r\n\t\t\t\t\t\t\t<el-tag type=\"success\">{{ scope.row.info[0] }}</el-tag>\r\n\t\t\t\t\t\t</template>\r\n\t\t\t\t\t</el-table-column>\r\n\t\t\t\t\t<el-table-column label=\"文件类型\">\r\n\t\t\t\t\t\t<template #default=\"scope\">\r\n\t\t\t\t\t\t\t<el-tag type=\"info\">{{ scope.row.info[2] }}</el-tag>\r\n\t\t\t\t\t\t</template>\r\n\t\t\t\t\t</el-table-column>\r\n\t\t\t\t\t<el-table-column label=\"操作\">\r\n\t\t\t\t\t\t<template #default=\"scope\">\r\n\t\t\t\t\t\t\t<el-button type=\"danger\" icon=\"Delete\" circle size=\"small\" @click=\"delFile(scope.row)\"/>\r\n\t\t\t\t\t\t</template>\r\n\t\t\t\t\t</el-table-column>\r\n\t\t\t\t</el-table>\r\n\t\t\t</el-card>\r\n\t\t</el-col>\r\n\t</el-row>\r\n</template>\r\n\r\n<script setup>\r\n\timport api from '@/api/index'\r\n\timport { UserStore } from '@/store/modoles/userStore'\r\n\timport { ElNotification, ElMessageBox,ElMessage } from 'element-plus'\r\n\tconst ustore = UserStore()\r\n\tfunction updateHead() {\r\n\t\treturn {\r\n\t\t\tAuthorization: ustore.token\r\n\t\t};\r\n\t}\r\n\t\r\n\t\r\n</script>\r\n\r\n\r\n<script>\r\n\texport default {\r\n\t\tdata() {\r\n\t\t\treturn {\r\n\t\t\t\t// 编辑的参数\r\n\t\t\t\tparams: [],\r\n\t\t\t\t// 文件列表\r\n\t\t\t\tfiles: [],\r\n\t\t\t\t// 参数类型列表\r\n\t\t\t\tparamsType: []\r\n\t\t\t};\r\n\t\t},\r\n\t\tprops: {\r\n\t\t\tmodelValue: {\r\n\t\t\t\ttype: Array,\r\n\t\t\t\tdefault: [\r\n\t\t\t\t\t['', '']\r\n\t\t\t\t]\r\n\t\t\t}\r\n\t\t},\r\n\t\temits: ['update:modelValue'],\r\n\t\tmethods: {\r\n\t\t\t// 修改参数类型\r\n\t\t\tseleType(val, index) {\r\n\t\t\t\tif (val === 'file') {\r\n\t\t\t\t\tthis.params[index][1] = ['', '', ''];\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.params[index][1] = '';\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t// 修改参数值\r\n\t\t\tseleFile(val, index) {\r\n\t\t\t\t// 当前选中的文件\r\n\t\t\t\tconst sFile = this.files.find(item => {\r\n\t\t\t\t\treturn item.info[0] === val;\r\n\t\t\t\t});\r\n\t\t\t\t// 修改文件\r\n\t\t\t\tthis.params[index][1] = [...sFile.info];\r\n\t\t\t\tconsole.log(this.params);\r\n\t\t\t},\r\n\t\t\t// 文件上传成功\r\n\t\t\tuploadSuccess(response) {\r\n\t\t\t\tElMessage({\r\n\t\t\t\t\ttype: 'success',\r\n\t\t\t\t\tmessage: '文件上传成功!',\r\n\t\t\t\t\tduration: 2000\r\n\t\t\t\t});\r\n\t\t\t\tthis.getAllfile();\r\n\t\t\t},\r\n\t\t\t// 文件上传失败\r\n\t\t\tuploadError(error) {\r\n\t\t\t\tElMessage({\r\n\t\t\t\t\ttype: 'error',\r\n\t\t\t\t\tmessage: JSON.parse(error.message).msg,\r\n\t\t\t\t\tduration: 2000\r\n\t\t\t\t});\r\n\t\t\t},\r\n\t\t\t// 获取文件列表\r\n\t\t\tasync getAllfile() {\r\n\t\t\t\t// 获取文件列表\r\n\t\t\t\tconst response = await api.getFiles();\r\n\t\t\t\tif (response.status === 200) {\r\n\t\t\t\t\tthis.files = response.data;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t// 获取参数的类型\r\n\t\t\tgetParamsType() {\r\n\t\t\t\t// 获取参数类型\r\n\t\t\t\tthis.paramsType = [];\r\n\t\t\t\tthis.params.forEach(item => {\r\n\t\t\t\t\tif (typeof item[1] === 'string') {\r\n\t\t\t\t\t\tthis.paramsType.push('text');\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.paramsType.push('file');\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t},\r\n\t\t\t// 删除文件\r\n\t\t\tasync delFile(item){\r\n\t\t\t\tvar res=await api.delFiles(item.id)\r\n\t\t\t\tif (res.status===204){\r\n\t\t\t\t\tElMessage({\r\n\t\t\t\t\ttype: 'success',\r\n\t\t\t\t\tmessage: \"删除文件成功\"\r\n\t\t\t\t});\r\n\t\t\t\tthis.getAllfile();\r\n\t\t\t\t}else{\r\n\t\t\t\t\tElMessage({\r\n\t\t\t\t\ttype: 'error',\r\n\t\t\t\t\tmessage: \"删除文件失败\"\r\n\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\r\n\t\t\t}\r\n\t\t},\r\n\t\tcreated() {\r\n\t\t\tif (this.modelValue.length > 0) {\r\n\t\t\t\tthis.params = this.modelValue;\r\n\t\t\t} else {\r\n\t\t\t\tthis.params = [\r\n\t\t\t\t\t['', '']\r\n\t\t\t\t];\r\n\t\t\t}\r\n\t\t\tthis.getAllfile();\r\n\t\t\tthis.getParamsType();\r\n\t\t},\r\n\t\twatch: {\r\n\t\t\t'params.length': function(val) {\r\n\t\t\t\tthis.getParamsType();\r\n\t\t\t},\r\n\t\t\tparams: {\r\n\t\t\t\tdeep: true,\r\n\t\t\t\thandler: function(value) {\r\n\t\t\t\t\tthis.$emit('update:modelValue', value);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tmodelValue: {\r\n\t\t\t\tdeep: true,\r\n\t\t\t\thandler: function(value) {\r\n\t\t\t\t\tthis.params = value;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n</script>\r\n\r\n<style></style>","import script from \"./FormData.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./FormData.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\r\n    <!-- 运行结果展示 -->\r\n    <el-tabs type=\"border-card\">\r\n        <el-tab-pane label=\"响应体\">\r\n            <EditorCopmponts v-model=\"result.response_body\" height='200px' lang=\"json\" readOnly=True></EditorCopmponts>\r\n        </el-tab-pane>\r\n        <el-tab-pane label=\"响应头\">\r\n            <div v-for=\"(i,j) in result.response_header\">\r\n                <el-tag type=\"primary\">{{j}}</el-tag>\r\n                <span>:</span>\r\n                <el-tag type=\"success\">{{ i }}</el-tag>\r\n            </div>\r\n        </el-tab-pane>\r\n        <el-tab-pane label=\"请求信息\">\r\n            <el-collapse >\r\n                <el-collapse-item title=\"General\" name=\"1\">\r\n                    <template #icon=\"{ isActive }\">\r\n                    <span class=\"icon-ele\">\r\n                        {{ isActive ? '关闭' : '展开' }}\r\n                    </span>\r\n                    </template>\r\n                    <div>\r\n                        <el-tag type=\"success\">RequestMethod: </el-tag>\r\n                        <el-tag type=\"danger\">{{ result.method }}</el-tag>\r\n                    </div>\r\n                    <div>\r\n                        <el-tag type=\"success\">RequestUrl: </el-tag>\r\n                        <el-tag type=\"danger\">{{ result.url }}</el-tag>\r\n                    </div>\r\n                </el-collapse-item>\r\n                <el-collapse-item title=\"Request Header\" name=\"2\">\r\n                    <template #icon=\"{ isActive }\">\r\n                    <span class=\"icon-ele\">\r\n                        {{ isActive ? '关闭' : '展开' }}\r\n                    </span>\r\n                    </template>\r\n                    <div v-for=\"(i,j) in result.response_header\">\r\n                        <el-tag type=\"success\">{{j}}: </el-tag>\r\n                        <el-tag type=\"danger\">{{ i }}</el-tag>\r\n                    </div>\r\n                </el-collapse-item>\r\n                <el-collapse-item title=\"Request Body\" name=\"3\">\r\n                    <template #icon=\"{ isActive }\">\r\n                    <span class=\"icon-ele\">\r\n                        {{ isActive ? '关闭' : '展开' }}\r\n                    </span>\r\n                    </template>\r\n                    <div>\r\n                        <el-tag type=\"danger\">{{ result.requests_body }}</el-tag>\r\n                    </div>\r\n                </el-collapse-item>    \r\n            </el-collapse>\r\n        </el-tab-pane>\r\n        <el-tab-pane label=\"日志\">\r\n            <div style=\"overflow-x: auto;\">\r\n                <div v-for=\"log in result.log_data\" >\r\n                <el-tag v-if=\"log[0]==='INFO'\" type=\"success\">{{ log[0] }}:{{ log[1] }}</el-tag>\r\n                <el-tag v-else-if=\"log[0]==='DEBUG'\" type=\"info\">{{ log[0] }}:{{ log[1] }}</el-tag>\r\n                <el-tag v-else-if=\"log[0]==='ERROR'\" type=\"danger\">{{ log[0] }}:{{ log[1] }}</el-tag>\r\n                <el-tag v-else type=\"warning\">{{ log[0] }}:{{ log[1] }}</el-tag>\r\n            </div>\r\n            </div>\r\n            \r\n        </el-tab-pane>\r\n        <el-tab-pane disabled>\r\n            <!-- 使用插槽更改数据用# label键表示 -->\r\n            <template #label>\r\n                <span v-if=\"result.state==='成功'\" style=\"color: green;\">Assert:{{ result.state }}</span>\r\n                <span v-else-if=\"result.state==='错误'\" style=\"color: brown;\">Assert:{{ result.state }}</span>\r\n                <span v-else>Assert:{{ result.state }}</span>\r\n            </template>\r\n        </el-tab-pane>\r\n        <el-tab-pane disabled>\r\n            <!-- 使用插槽更改数据用# label键表示 -->\r\n            <template #label>\r\n                <span v-if=\"200 <= result.status_cede && result.status_cede <300\" style=\"color: green;\">code:{{ result.status_cede }}</span>\r\n                <span v-else-if=\"300 <= result.status_cede && result.status_cede < 400\" style=\"color: slategray;\">code:{{ result.status_cede }}</span>\r\n                <span v-else-if=\"400 <= result.status_cede && result.status_cede < 500\" style=\"color: yellow;\">code:{{ result.status_cede }}</span>\r\n                <span v-else-if=\"500 <= result.status_cede && result.status_cede < 600\" style=\"color: brown;\">code:{{ result.status_cede }}</span>\r\n                <span v-else>code:{{ result.status_cede }}</span>\r\n            </template>\r\n        </el-tab-pane>\r\n        <el-tab-pane disabled>\r\n            <!-- 使用插槽更改数据用# label键表示 -->\r\n            <template #label>\r\n                Time:{{ result.run_time }}\r\n            </template>\r\n        </el-tab-pane>\r\n    </el-tabs>\r\n    <!-- 提交bug按钮 -->\r\n    <div style=\"margin-top: 10px;width: 100%;text-align: center;\" v-if=\"result.state === '失败'\">\r\n\t\t<el-button v-show='!hideBtn' @click=\"addBugDlg = true\" plain size=\"small\">提交bug{{showbBtn}}</el-button>\r\n\t</div>\r\n\t<!-- 添加bug的弹框 -->\r\n\t<el-dialog title=\"提交bug\" v-model=\"addBugDlg\" width=\"30%\">\r\n\t\t<el-form :model=\"bugForm\">\r\n\t\t\t<el-form-item label=\"所属接口\">\r\n\t\t\t\t<el-select size=\"small\" v-model=\"bugForm.interface\" placeholder=\"bug对应的接口\" style=\"width: 100%;\">\r\n\t\t\t\t\t<el-option :label=\"iter.name + ' ' + iter.url\" :value=\"iter.id\" v-for=\"iter in interfaces\"\r\n\t\t\t\t\t\t:key=\"iter.id\"></el-option>\r\n\t\t\t\t</el-select>\r\n\t\t\t</el-form-item>\r\n\t\t\t<el-form-item label=\"bug描述\"><el-input :autosize=\"{ minRows: 3, maxRows: 4 }\" v-model=\"bugForm.desc\"\r\n\t\t\t\t\ttype=\"textarea\" autocomplete=\"off\"></el-input></el-form-item>\r\n\t\t</el-form>\r\n\t\t<template #footer>\r\n\t\t\t<div class=\"dialog-footer\">\r\n\t\t\t\t<el-button size=\"small\" @click=\"addBugDlg = false\">取 消</el-button>\r\n\t\t\t\t<el-button size=\"small\" type=\"primary\" plain @click=\"saveBug\">确 定</el-button>\r\n\t\t\t</div>\r\n\t\t</template>\r\n\t</el-dialog>\r\n</template>\r\n\r\n<script setup>\r\nimport { defineProps,ref,reactive} from 'vue';\r\nimport EditorCopmponts from '@/views/home/components/EditorCopmponts.vue';\r\n\r\n\r\n// 声明defineProps 对象通过里面的属性接收外部组件外部的参数\r\nconst props = defineProps({\r\n    result:{},\r\n    hideBtn: false,\r\n    // interID:null\r\n})\r\nconst addBugDlg = ref(false)\r\nconst bugForm = reactive({\r\n        project: null,\r\n\t\tinterface: null,\r\n\t\tdesc: '',\r\n\t\tinfo: '',\r\n\t\tstatus: '未处理'\r\n\t})\r\n// 保存bug的方法\r\nasync function saveBug() {\r\n\t\tbugForm.project = proStores.pro.id;\r\n        // bugForm.interface=props.interID\r\n\t\tbugForm.info = props.result;\r\n\t\tconst response = await api.addBug(bugForm);\r\n\t\tif (response.status === 201) {\r\n\t\t\tElNotification({\r\n\t\t\t\ttype: 'success',\r\n\t\t\t\ttitle: 'bug提交成功',\r\n\t\t\t\tduration: 1000\r\n\t\t\t});\r\n\t\t\taddBugDlg.value = false;\r\n\t\t}\r\n\t}\r\n\r\n</script>\r\n\r\n<style scoped>\r\n.icon-ele {\r\n  margin: 0 8px 0 auto;\r\n  color: #409eff;\r\n}\r\n</style>","import script from \"./ResultView.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ResultView.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./ResultView.vue?vue&type=style&index=0&id=520d49ff&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-520d49ff\"]])\n\nexport default __exports__"],"names":["ProjectStore","defineStore","state","pro","env_list","env","inetrfaces","sceneList","taskList","getters","interface1","this","filter","item","type","interface2","actions","getInterFaces","res","api","id","status","data","console","log","getScenes","getTestTask","getTestTaskList","persist","enabled","strategies","key","storage","localStorage","__default__","params","files","paramsType","props","modelValue","Array","default","emits","methods","seleType","val","index","seleFile","sFile","find","info","uploadSuccess","response","ElMessage","message","duration","getAllfile","uploadError","error","JSON","parse","msg","getFiles","getParamsType","forEach","push","delFile","delFiles","created","length","watch","deep","handler","value","$emit","ustore","UserStore","updateHead","Authorization","token","__exports__","__props","addBugDlg","ref","bugForm","reactive","project","interface","desc","async","saveBug","proStores","result","addBug","ElNotification","title"],"sourceRoot":""}
{"version":3,"file":"js/581.5eceb5a9.js","mappings":"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","sources":["webpack://api_test_vue/./node_modules/vue-loader/dist/exportHelper.js","webpack://api_test_vue/./src/store/modoles/proStore.js","webpack://api_test_vue/./src/views/project/ProjectView.vue","webpack://api_test_vue/./src/views/project/ProjectView.vue?443d"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// runtime helper for setting properties on components\n// in a tree-shakable way\nexports.default = (sfc, props) => {\n    const target = sfc.__vccOpts || sfc;\n    for (const [key, val] of props) {\n        target[key] = val;\n    }\n    return target;\n};\n","import {defineStore} from 'pinia'\r\nimport api from '@/api/index'\r\n\r\nexport const ProjectStore=defineStore('proStore',\r\n    {   \r\n        // 全局数据存储\r\n        state: () => {\r\n            return {\r\n                // 项目信息\r\n                pro:{},\r\n                // 环境列表\r\n                env_list:[],\r\n                // 选择的测试环境\r\n                env:0,\r\n                // 保存接口列表\r\n                inetrfaces:[],\r\n                // 测试业务流列表\r\n                sceneList:[],\r\n                // 测试计划列表\r\n                taskList: []\r\n            }\r\n\r\n        },\r\n        getters:{\r\n            // 过滤出项目接口\r\n            interface1(){\r\n                return this.inetrfaces.filter((item) => {\r\n                    return item.type==='1'\r\n                })\r\n            },\r\n            // 过滤出第三方接口\r\n            interface2(){\r\n                return this.inetrfaces.filter((item) => {\r\n                    return item.type==='2'\r\n                })\r\n            }\r\n        },\r\n        // 定义全局的方法\r\n        actions:{\r\n            // 获取接口列表\r\n            async getInterFaces(){\r\n                const res=await api.getInterFaces(this.pro.id)\r\n                if (res.status===200){\r\n                    this.inetrfaces=res.data\r\n                }else{\r\n                    console.log(`获取项目id${this.pro.id}失败`)\r\n                }\r\n            },\r\n            // 获取测试业务流列表\r\n            async getScenes(){\r\n                const res=await api.getScenes(this.pro.id)\r\n                if (res.status===200){\r\n                    this.sceneList=res.data\r\n                }\r\n            },\r\n            // 获取测试计划\r\n            async getTestTask(){\r\n                const res=await api.getTestTaskList(this.pro.id)\r\n                if (res.status===200){\r\n                    this.taskList=res.data\r\n                }\r\n            }\r\n        },\r\n        persist: {\r\n            enabled:true,\r\n            strategies:{\r\n                key:\"users\",\r\n                storage:localStorage\r\n            }\r\n        }\r\n    },\r\n    \r\n  \r\n)","<template>\r\n    <div class=\"pro_page\">\r\n        <div class=\"pro_box\">\r\n            <!-- 顶部内容 -->\r\n             <div class=\"welecome\">\r\n              <span>欢迎使用自动化测试平台</span>\r\n              <el-button type=\"primary\" @click=\"showform\">添加项目</el-button>\r\n             </div>\r\n             <div class=\"pro_list\">\r\n              <el-carousel type=\"card\" height=\"600px\">\r\n                <el-carousel-item v-for=\"(item,index) in pro_list\" :key=\"index\">\r\n                    <!-- 项目卡片 -->\r\n                     <div class=\"pro\">\r\n                        <div @click=\"open_pro(item)\">\r\n                          <!-- <img src='../../assets/images/pro02.png'> -->\r\n                          <img :src=\"imageUrls.urls[index]\">   \r\n                          <div class=\"name\">{{item.name}}</div>\r\n                        </div>\r\n                        <div class=\"btn_box\">\r\n                            <el-button type=\"success\"  icon=\"Edit\" @click=\"clickUpdate(item)\"></el-button>\r\n                            <el-button type=\"success\"  icon=\"Delete\" @click=\"delproject(item)\"></el-button>\r\n                        </div>\r\n                     </div>\r\n                </el-carousel-item>\r\n              </el-carousel>\r\n             </div>\r\n        </div>\r\n\r\n    </div>\r\n    <!--  添加项目弹框-->\r\n    <el-dialog v-model=\"isShow\" title=\"添加项目\" width=\"500\">\r\n    <el-form :model=\"proData\">\r\n      <el-form-item label=\"项目名称\" :label-width=\"formLabelWidth\">\r\n        <el-input v-model=\"proData.name\" autocomplete=\"off\" />\r\n      </el-form-item>\r\n      <el-form-item label=\"项目负责人\" :label-width=\"formLabelWidth\">\r\n        <el-input v-model=\"proData.leader\" autocomplete=\"on\" />\r\n      </el-form-item>\r\n    </el-form>\r\n    <template #footer>\r\n      <div class=\"dialog-footer\">\r\n        <el-button @click=\"off_form\">取消</el-button>\r\n        <el-button type=\"primary\" @click=\"addProject\">确认</el-button>\r\n      </div>\r\n    </template>\r\n  </el-dialog>\r\n\r\n  <!--  编辑项目弹框-->\r\n  <el-dialog v-model=\"is_update\" title=\"更改项目\" width=\"500\">\r\n    <el-form :model=\"pro_update_edit\">\r\n      <el-form-item label=\"项目名称\" :label-width=\"formLabelWidth\">\r\n        <el-input v-model=\"pro_update_edit.name\" autocomplete=\"off\" />\r\n      </el-form-item>\r\n      <el-form-item label=\"项目负责人\" :label-width=\"formLabelWidth\">\r\n        <el-input v-model=\"pro_update_edit.leader\" autocomplete=\"on\" />\r\n      </el-form-item>\r\n    </el-form>\r\n    <template #footer>\r\n      <div class=\"dialog-footer\">\r\n        <el-button @click=\"off_edit\">取消</el-button>\r\n        <el-button type=\"primary\" @click=\"updatePro()\">确认</el-button>\r\n      </div>\r\n    </template>\r\n  </el-dialog>\r\n  </template>\r\n\r\n\r\n\r\n<script setup>\r\nimport {ref,reactive} from 'vue'\r\nimport api from '../../api/index'\r\nimport { ElMessage ,ElMessageBox} from 'element-plus'\r\nimport {useRouter} from 'vue-router'\r\nimport {ProjectStore} from '@/store/modoles/proStore'\r\n\r\nlet pro_list=ref([])\r\nasync function getProList() {\r\n  const res = await api.getProListApi()\r\n  if (res.status===200){\r\n    pro_list.value=res.data\r\n  } \r\n}\r\ngetProList()\r\n\r\nconst isShow=ref(false)\r\n// 创建项目弹窗操作\r\nfunction showform(){\r\n  isShow.value=true\r\n}\r\n// 关闭添加项目弹窗操作\r\nfunction off_form(){\r\n  isShow.value=false\r\n  proData.name=''\r\n  proData.leader=''\r\n}\r\n\r\n// 添加项目操作\r\nasync function addProject() {\r\n  const res = await api.createProApi(proData)\r\n  // 请求接口添加成功提示\r\n  if (res.status===201){\r\n    ElMessage({\r\n    message: '创建项目成功',\r\n    type: 'success',\r\n  })\r\n  } \r\n  // 接口请求不成功提示失败\r\n  else{\r\n    ElMessage({\r\n    message: '创建项目失败',\r\n    type: 'error',\r\n  })\r\n}\r\n  // 项目添加操作完成关闭弹窗重新过去项目列表\r\n  off_form()\r\n  getProList()\r\n\r\n}\r\n// 添加的项目数据\r\nconst proData=reactive({\r\n  name:\"\",\r\n  leader:\"\"\r\n})\r\n// 项目图片展示地址\r\nconst imageUrls=reactive(\r\n        {\r\n            urls:[\r\n            require('@/assets/images/pro01.png'),  \r\n            require('@/assets/images/pro02.png'),  \r\n            require('@/assets/images/pro03.png'),\r\n            require('@/assets/images/pro04.png'),\r\n            require('@/assets/images/pro05.png'),\r\n            require('@/assets/images/pro06.png'),\r\n            require('@/assets/images/pro07.png'),\r\n            require('@/assets/images/pro08.png')\r\n            ]  \r\n        }\r\n    )\r\n\r\n// 删除项目\r\nfunction delproject(pro){\r\n  // 提示确认是否删除成功\r\n  ElMessageBox.confirm(\r\n    `删除项目:${pro.name}后数据将不再恢复，是否确认删除？`,\r\n    // '删除项目后数据将不再恢复，是否确认删除？',\r\n    '提示！',\r\n    {\r\n      confirmButtonText: '确认',\r\n      cancelButtonText: '取消',\r\n      type: 'warning',\r\n    }\r\n  )\r\n    .then(async() => {\r\n      const res=await api.delProApi(pro.id)\r\n      if (res.status===204){\r\n        ElMessage({\r\n        type: 'success',\r\n        message: '删除成功',\r\n      })\r\n      }\r\n    })\r\n    .catch(() => {\r\n      ElMessage({\r\n        type: 'info',\r\n        message: '取消删除',\r\n      })\r\n    })\r\n    getProList()   \r\n}\r\n\r\n// 更改项目信息相关操作\r\nconst is_update=ref(false)\r\nconst pro_update_edit=ref({})\r\nfunction clickUpdate(pro){\r\n  is_update.value=true\r\n  pro_update_edit.value={...pro}\r\n}\r\n// 调用接口更新项目信息\r\nasync function updatePro(){\r\n  let pro_id=pro_update_edit.value.id\r\n  const res= await api.updateProApi(pro_id,pro_update_edit.value)\r\n  if(res.status===200){\r\n    ElMessage({\r\n        type: 'success',\r\n        message: '更改成功',\r\n      })\r\n    is_update.value=false\r\n    getProList()\r\n  }\r\n}\r\n// 关闭添加项目弹窗操作\r\nfunction off_edit(){\r\n  is_update.value=false\r\n}\r\n\r\n// 进入项目详情\r\nconst router = useRouter()\r\n\r\nfunction open_pro(pro){\r\n  let proStore=ProjectStore()\r\n  router.push({name:'home'})\r\n  proStore.pro=pro\r\n}\r\n\r\n\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n@import './project.scss'\r\n\r\n</style>\r\n  ","import script from \"./ProjectView.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ProjectView.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./ProjectView.vue?vue&type=style&index=0&id=6116a3bc&lang=scss&scoped=true\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-6116a3bc\"]])\n\nexport default __exports__"],"names":["exports","sfc","props","target","__vccOpts","key","val","ProjectStore","defineStore","state","pro","env_list","env","inetrfaces","sceneList","taskList","getters","interface1","this","filter","item","type","interface2","actions","getInterFaces","res","api","id","status","data","console","log","getScenes","getTestTask","getTestTaskList","persist","enabled","strategies","storage","localStorage","pro_list","ref","async","getProList","getProListApi","value","isShow","showform","off_form","proData","name","leader","addProject","createProApi","ElMessage","message","reactive","imageUrls","urls","require","delproject","ElMessageBox","confirm","confirmButtonText","cancelButtonText","then","delProApi","catch","is_update","pro_update_edit","clickUpdate","updatePro","pro_id","updateProApi","off_edit","router","useRouter","open_pro","proStore","push","__exports__"],"sourceRoot":""}